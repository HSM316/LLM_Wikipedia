{{Infobox computer
|name         = ESP8266
|manufacturer = Espressif Systems

|CPUspeed     = 80 MHz (default) or 160 MHz
|Power = 3.3 V DC
|image        = ESP-01.jpg
|caption      = ESP-01 module by Ai-Thinker with ESP8266EX SoC
|type         = 32-bit microcontroller
|input        = 16 GPIO pins
|memory       = 32 KiB instruction, 80 KiB user data
|successor    = [[ESP32]]
}}

The '''ESP8266''' is a low-cost [[Wi-Fi]] microchip, with a full [[TCP/IP stack]] and [[microcontroller]] capability, produced by [[Espressif Systems]]<ref name="Espressif_ESP8266">{{cite web |title=ESP8266 Overview | publisher=Espressif Systems |url=http://espressif.com/en/products/hardware/esp8266ex/overview | accessdate=2017-10-02}}</ref> in Shanghai, China. 

The chip first came to the attention of Western [[maker culture|makers]] in August 2014 with the '''ESP-01''' module, made by a third-party manufacturer Ai-Thinker. This small module allows microcontrollers to connect to a Wi-Fi network and make simple TCP/IP connections using [[Hayes command set|Hayes]]-style commands. However, at first there was almost no English-language documentation on the chip and the commands it accepted.<ref>{{cite web | url=http://hackaday.com/2014/08/26/new-chip-alert-the-esp8266-wifi-module-its-5/ | title=New Chip Alert: The ESP8266 WiFi Module (It’s $5) | publisher=[[Hackaday]] | author=Brian Benchoff | date=August 26, 2014 | accessdate=2015-06-24}}</ref> The very low price and the fact that there were very few external components on the module, which suggested that it could eventually be very inexpensive in volume, attracted many hackers to explore the module, the chip, and the software on it, as well as to translate the Chinese documentation.<ref>{{cite web | url=http://hackaday.com/2014/09/06/the-current-state-of-esp8266-development/ | title=The Current State of ESP8266 Development | publisher=[[Hackaday]] | author=Brian Benchoff | date=September 6, 2014 | accessdate=2015-06-24}}</ref>

The '''ESP8285''' is an ESP8266 with 1&nbsp;MiB of built-in flash, allowing the building of single-chip devices capable of connecting to Wi-Fi.<ref name="esp8285">{{cite web | url=https://espressif.com/en/media_overview/news/espressif-announces-esp8285-wi-fi-chip-wearable-devices | title=Espressif Announces ESP8285 Wi-Fi Chip for Wearable Devices | publisher=Espressif Systems | date=Mar 9, 2016 | accessdate=2016-07-10}}</ref>

The successors to these microcontroller chips is the [[ESP32]] family of chips, including the pin-compatible ESP32-C3.

== Features ==
[[File:ESP-01 Wireframe.png|thumb|ESP-01 module wireframe]]
* Processor: L106 32-bit [[reduced instruction set computing|RISC]] microprocessor core based on the [[Tensilica]] Xtensa Diamond Standard 106Micro running at 80&nbsp;MHz<ref>Both the CPU and flash clock speeds can be doubled by overclocking on some devices. CPU can be run at 160&nbsp;MHz, and flash can be sped up from 40&nbsp;MHz to 80&nbsp;MHz.{{Citation needed|date=May 2017}} Success varies chip to chip.{{Citation needed|date=May 2017}}</ref>
* Memory:
** 32 KiB instruction RAM
** 32 KiB instruction cache RAM
** 80 KiB user-data RAM
** 16 KiB ETS system-data RAM
* External QSPI flash: up to 16 MiB is supported (512 KiB to 4 MiB typically included)
* [[IEEE 802.11]] b/g/n [[Wi-Fi]]
** Integrated [[duplexer#Transmit-receive switch|TR switch]], [[balun]], [[low-noise amplifier|LNA]], [[RF power amplifier|power amplifier]] and [[matching network]]
** [[Wired Equivalent Privacy|WEP]] or [[Wi-Fi Protected Access|WPA/WPA2]] authentication, or open networks
* 16 [[general-purpose input/output|GPIO]] pins
* [[Serial Peripheral Interface Bus|SPI]]
* [[I²C]] (software implementation)<ref name="EspressifBBS_I2C">{{cite web |title=Espressif ESP8266 Developer Zone Discussion Forum: Does ESP8266 actually have hardware I2C? | publisher=Espressif Systems |url=http://bbs.espressif.com/viewtopic.php?t=1032#p5449 | date=2014-10-27 | accessdate=2017-10-02}}</ref>
* [[I²S]] interfaces with DMA (sharing pins with GPIO)
* [[Universal asynchronous receiver/transmitter|UART]] on dedicated pins, plus a transmit-only UART can be enabled on GPIO2
* 10-bit [[analog-to-digital converter|ADC]] ([[successive approximation ADC]])

== Pinout of ESP-01 ==
[[File:ESP8266 01 PinOut.png|thumb|ESP-01 module pinout]]
The pinout is as follows for the common ESP-01 module:
# VCC, Voltage (+3.3 V; can handle up to 3.6 V)
# GND, Ground (0 V)
# RX, Receive data bit X
# TX, Transmit data bit X
# CH_PD, Chip power-down
# RST, Reset
# GPIO 0, General-purpose input/output No. 0
# GPIO 2, General-purpose input/output No. 2

[[File:ESP8266-HD.jpg|thumb|ESP8266 Die shot]]
== SDKs ==
In October 2014, Espressif Systems released a [[software development kit]] (SDK) for programming the chip directly, which removed the need for a separate microcontroller.<ref>{{Cite web| url=http://hackaday.com/2014/10/25/an-sdk-for-the-esp8266-wifi-chip/| title=An SDK for the ESP8266 WiFi Chip| publisher=[[Hackaday]] | author=Brian Benchoff| date=October 25, 2014| access-date=2015-06-24}}</ref> Since then, there have been many official SDK releases from Espressif; Espressif maintains two versions of the SDK&nbsp;— one that is based on [[FreeRTOS]] and the other based on callbacks.<ref>{{Cite web| url=http://bbs.espressif.com/viewforum.php?f=46/ | title=Official SDK release from Espressif for ESP8266 | publisher=Espressif Systems | date=July 29, 2015| access-date=2015-08-08}}</ref>

An alternative to Espressif's official SDK is the open-source ESP-Open-SDK<ref>{{Cite web |url=https://github.com/pfalcon/esp-open-sdk |title=esp-open-sdk: Free and open (as much as possible) integrated SDK for ESP8266/ESP8285 chips |author=Paul Sokolovsky}}</ref> that is based on the [[GNU Compiler Collection]] (GCC) toolchain, maintained by Max Filippov.<ref>{{Cite web |url = https://github.com/esp8266/esp8266-wiki/wiki/Toolchain|title = ESP8266 GCC Toolchain|author = Max Filippov|date = February 15, 2015|access-date = 2015-08-08}}</ref> Another alternative is the "Unofficial Development Kit" by Mikhail Grigorev.<ref>{{Cite web |url=https://github.com/CHERTS/esp8266-devkit |title=Unofficial Development Kit for Espressif ESP8266 (GitHub Repository) |author=Mikhail Grigorev}}</ref><ref>{{Cite web |url=http://programs74.ru/udkew-en.html |title=Project Unofficial Development Kit for Espressif ESP8266 |author=Mikhail Grigorev}}</ref>

Other SDKs, mostly open-source, include:
* [[Arduino]]&nbsp;— A C++-based firmware. With this core, the ESP8266 CPU and its Wi-Fi components can be programmed like any other Arduino device. [https://github.com/esp8266/Arduino The ESP8266 Arduino Core is available through GitHub].
* [http://www.esp8266basic.com/ ESP8266 BASIC]&nbsp;— An open-source [[BASIC]]-like interpreter specifically tailored for the [[Internet of things|Internet of Things]] (IoT). Self-hosting browser-based development environment.
* [[ESP Easy]]&nbsp;— Developed by [[home automation]] enthusiasts.
* [https://esphome.io/index.html ESPHome]&nbsp;— ESPHome is a system to control your ESP8266/ESP32 by simple yet powerful configuration files and control them remotely through home automation systems.
* [https://github.com/arendst/Sonoff-Tasmota Tasmota] - open-source firmware, very popular with home automation enthusiasts.
* [https://github.com/SuperHouse/esp-open-rtos ESP-Open-RTOS]&nbsp;— Open-source FreeRTOS-based ESP8266 software framework.
* [https://github.com/pfalcon/esp-open-sdk ESP-Open-SDK]&nbsp;— Free and open (as much as possible) integrated SDK for ESP8266/ESP8285 chips.
* [[Espruino]]&nbsp;— An actively maintained JavaScript SDK and firmware, closely emulating Node.js. Supports a few MCUs, including the ESP8266.
* [https://github.com/xoseperez/espurna/wiki ESPurna]&nbsp;— Open-source ESP8285/ESP8266 firmware.
* [https://github.com/niclash/forthright Forthright]&nbsp;— Port of Jones Forth to the ESP8266 microcontroller.
* [https://micropython.org/ MicroPython]&nbsp;— A port of [[MicroPython]] (an implementation of Python for embedded devices) to the ESP8266 platform.
* [https://github.com/Moddable-OpenSource/moddable#supported-hardware Moddable SDK] — includes JavaScript language and library support for the ESP8266
* [[Mongoose OS]]&nbsp;— An open-source operating system for connected products. Supports ESP8266 and ESP32. Develop in C or JavaScript.<ref>{{Cite web |url=https://mongoose-os.com/docs/quickstart/setup.html |title=Mongoose OS Documentation |publisher=Cesanta}}</ref>
* [[NodeMCU]]&nbsp;— A [[Lua_(programming_language)|Lua]]-based firmware.
* [https://platformio.org/platforms/espressif8266 PlatformIO]&nbsp;— A cross-platform IDE and unified debugger, which sits on top of Arduino code and libraries.
* [https://github.com/zeroflag/punyforth Punyforth]&nbsp;— Forth-inspired programming language for the ESP8266.
* [https://github.com/SmingHub/Sming Sming]&nbsp;— An actively developed asynchronous C/C++ framework with superb performance and multiple network features.
* [http://www.ulisp.com/show?21T5 uLisp]&nbsp;— A version of the [[Lisp (programming language)|Lisp]] programming language specifically designed to run on processors with a limited amount of RAM.
* [http://www.zbasic.net ZBasic for ESP8266]&nbsp;— A subset of Microsoft's widely-used Visual Basic 6, which has been adapted as a control language for the ZX microcontroller family and the ESP8266.
* [[Zerynth]]&nbsp;— IoT framework for programming ESP8266<ref>{{Cite web |url=https://www.zerynth.com/blog/python-for-esp8266-in-just-a-few-clicks-using-zerynth/ |title=Python for ESP8266 in just a few clicks using Zerynth |author=Luigi F. Cerfeda |date=June 15, 2017 |publisher=Zerynth (Kinzica Ventures LLC)}}</ref> and other microcontrollers in [[Python (programming language)|Python]].

== Espressif modules ==
[[File:ESP-WROOM-02(ESP8266).jpg|thumb|ESP-WROOM-02]]
This is the series of ESP8266-based modules made by Espressif:

{| class="wikitable"
!Name 
!Active pins 
!Pitch 
!Form factor 
!LEDs 
!Antenna 
!Shielded
!Dimensions (mm)
!Notes
|-
| {{nowrap|ESP-WROOM-02}}<ref>{{cite web | url=https://espressif.com/en/products/hardware/esp-wroom-02/overview | title=Espressif ESP-WROOM-02 | publisher=Espressif Systems | accessdate=2015-07-29}}</ref>
|18
|1.5&nbsp;mm
|2×9 castellated
| {{no}}
|PCB trace
| {{yes}}
|18 × 20
|FCC ID 2AC7Z-ESPWROOM02.
|-
| {{nowrap|ESP-WROOM-02D}}<ref name="Espressif_ESPWROOM02DU_Datasheet">{{cite web | url=http://espressif.com/sites/default/files/documentation/esp-wroom-02d_esp-wroom-02u_datasheet_en.pdf | title=ESP-WROOM-02D/ESP-WROOM-02U Datasheet | publisher=Espressif Systems | accessdate=2017-11-25 | archive-url=https://web.archive.org/web/20171201031911/http://espressif.com/sites/default/files/documentation/esp-wroom-02d_esp-wroom-02u_datasheet_en.pdf | archive-date=2017-12-01 | url-status=dead }}</ref>
|18
|1.5&nbsp;mm
|2×9 castellated
| {{no}}
|PCB trace
| {{yes}}
|18 × 20
|FCC ID 2AC7Z-ESPWROOM02D. Revision of ESP-WROOM-02 compatible with both 150-mil and 208-mil flash memory chips.
|-
| {{nowrap|ESP-WROOM-02U}}<ref name="Espressif_ESPWROOM02DU_Datasheet" />
|18
|1.5&nbsp;mm
|2×9 castellated
| {{no}}
|U.FL socket
| {{yes}}
|18 × 20
| Differs from ESP-WROOM-02D in that includes an U.FL compatible antenna socket connector.
|-
| {{nowrap|ESP-WROOM-S2}}<ref>{{cite web | url=http://www.espressif.com/sites/default/files/documentation/esp-wroom-s2_datasheet_en.pdf | title=ESP-WROOM-S2 Datasheet | publisher=Espressif Systems | accessdate=2017-10-08 | archive-url=https://web.archive.org/web/20171008231800/http://www.espressif.com/sites/default/files/documentation/esp-wroom-s2_datasheet_en.pdf | archive-date=2017-10-08 | url-status=dead }}</ref>
|20
|1.5&nbsp;mm
|2×10 castellated
| {{no}}
|PCB trace
| {{yes}}
|16 × 23
|FCC ID 2AC7Z-ESPWROOMS2.
|}

In the table above (and the two tables which follow), "Active pins" include the GPIO and ADC pins with which external devices can be attached to the ESP8266 MCU. The "Pitch" is the space between pins on the ESP8266 module, which is important to know if the device will be used on a breadboard. The "Form factor" also describes the module packaging as "2 × 9 DIL", meaning two rows of 9 pins arranged "Dual In Line", like the pins of DIP ICs. Many ESP-xx modules include a small on-board LED which can be programmed to blink and thereby indicate activity. There are several antenna options for ESP-xx boards including a trace antenna, an on-board ceramic antenna, and an external connector which allows an external Wi-Fi antenna to be attached. Since Wi-Fi communications generates a lot of RFI (Radio Frequency Interference), governmental bodies like the FCC like shielded electronics to minimize interference with other devices. Some of the ESP-xx modules come housed within a metal box with an FCC seal of approval stamped on it. First and second world markets will likely demand FCC approval and shielded Wi-Fi devices.{{citation needed|date=March 2018}}

== Ai-Thinker modules ==
[[File:ESP8266_mounted_on_adapter.jpg|alt=ESP-01 module|thumb|Ai-Thinker ESP8266 modules (ESP-12F, black color) soldered to breakout boards (white color)]]
This is the first series of modules made with the ESP8266 by the third-party manufacturer ''Ai-Thinker'' and remains the most widely available.<ref>{{cite web | url=http://www.esp8266.com/wiki/doku.php?id=esp8266-module-family | title=ESP8266 module family | publisher=ESP8266 Community Wiki | accessdate=2015-06-24}}</ref> They are collectively referred to as "ESP-xx modules". To form a workable development system they require additional components, especially a serial TTL-to-USB adapter (sometimes called a USB-to-UART bridge) and an external 3.3 volt power supply. Novice ESP8266 developers are encouraged to consider larger ESP8266 Wi-Fi development boards like the [[NodeMCU]] which includes the USB-to-UART bridge and a Micro-USB connector coupled with a 3.3 volt power regulator already built into the board. When project development is complete, those components are not needed and these cheaper ESP-xx modules are a lower power, smaller footprint option for production runs.

In the Notes column, Flash memory sizes apply to the given module and all those below it in the table. Exceptions which apply to a single module are shown in ().

{| class="wikitable sortable"
|-
! Name !! Active pins !! Pitch !! Form factor !! LEDs !! Antenna !! Shielded !! Dimensions (mm) !! Notes
|-
| ESP-01 || 6 || 0.1&nbsp;in || 2×4 DIL || {{yes}} || PCB trace || {{no}} || 14.3 × 24.8 || 512 KiB Flash and blue PCB from a generic manufacturer. 1 MiB Flash, AI-Cloud and black PCB from AI-Thinker.
|-
| ESP-01S || 6 || 0.1&nbsp;in || 2×4 DIL || {{yes}} || PCB trace || {{no}} || 14.4 × 24.7 || 1 MiB Flash
|-
| {{nowrap|ESP-01M}} || 16 || 1.6&nbsp;mm || 2×9 edge connector || {{no}} || PCB trace || {{yes}} || 18.0 × 18.0 || Uses ESP8285 (1 MiB built-in flash).
|-
| ESP-02 || 6 || 0.1&nbsp;in || 2×4 castellated || {{no}} || U.FL socket || {{no}} || 14.2 × 14.2 ||
|-
| ESP-03 || 10 || 2&nbsp;mm || 2×7 castellated || {{no}} || Ceramic || {{no}} || 17.3 × 12.1 ||
|-
| ESP-04 || 10 || 2&nbsp;mm || 2×4 castellated || {{no}} || None || {{no}} || 14.7 × 12.1 ||
|-
| ESP-05 || 3 || 0.1&nbsp;in || 1×5 SIL || {{no}} || U.FL socket || {{no}} || 14.2 × 14.2 ||
|-
| ESP-06 || 11 || various || 4×3 dice || {{no}} || None || {{yes}} || 14.2 × 14.7 || Not FCC approved.
|-
| ESP-07 || 14 || 2&nbsp;mm || 2×8 pinhole || {{yes}} || Ceramic + U.FL socket || {{yes}} || 20.0 × 16.0 || Not FCC approved.
|-
| ESP-07S || 14 || 2&nbsp;mm || 2×8 pinhole || {{no}} || U.FL socket || {{yes}} || 17.0 × 16.0 || FCC and CE approved.
|-
| ESP-08 || 10 || 2&nbsp;mm || 2×7 castellated || {{no}} || None || {{yes}} || 17.0 × 16.0 || Not FCC approved.
|-
| ESP-09 || 10 || various || 4×3 dice || {{no}} || None || {{no}} || 10.0 × 10.0 ||
|-
| ESP-10 || 3 || 2&nbsp;mm || 1×5 castellated || {{no}} || None || {{no}} || 14.2 × 10.0 ||
|-
| ESP-11 || 6 || 1.27&nbsp;mm || 1×8 pinhole || {{no}} || Ceramic || {{no}} || 17.3 × 12.1 ||
|-
| ESP-12 || 14 || 2&nbsp;mm || 2×8 castellated || {{yes}} || PCB trace || {{yes}} || 24.0 × 16.0 || FCC and CE approved.<ref>{{cite web | url=https://fccid.io/2ADUIESP-12 | title=2ADUIESP-12 by Shenzhen Anxinke technology co., LTD for Wi-Fi Module | publisher=[[FCC]] | date=December 30, 2014 | accessdate=2015-06-24}}</ref>
|-
| ESP-12E || 20 || 2&nbsp;mm || 2×8 castellated || {{yes}} || PCB trace || {{yes}} || 24.0 × 16.0 || 4&nbsp;MiB flash.
|-
| ESP-12F || 20 || 2&nbsp;mm || 2×8 castellated || {{yes}} || PCB trace || {{yes}} || 24.0 × 16.0 || FCC and CE approved. Improved antenna performance.
|-
| ESP-12S || 14 || 2&nbsp;mm || 2×8 castellated || {{yes}} || PCB trace || {{yes}} || 24.0 × 16.0 || FCC approved.<ref>{{cite web | url=https://fccid.io/2AHMR-ESP12S | title=FCC ID 2AHMR-ESP12S, Shenzhen Ai-Thinker Technology co., LTD WIFI MODULE -ESP12S | publisher=[[FCC]] | date=August 4, 2016 | accessdate=2017-07-17}}</ref>
|-
| ESP-13 || 16 || 1.5&nbsp;mm || 2×9 castellated || {{no}} || PCB trace || {{yes}} || W18.0 × L20.0 || Marked as "FCC". Shielded module is placed sideways, as compared to the ESP-12 modules.
|-
| ESP-14 || 22 || 2&nbsp;mm || 2×8 castellated +6 || {{yes}} || PCB trace || {{yes}} || 24.3 × 16.2 || Mostly advertised with "AI Cloud Inside".
|}

== Other boards ==
The reason for the popularity of many of these boards over the earlier ESP-xx modules is the inclusion of an on-board USB-to-UART bridge (like the Silicon Labs' CP2102 or the WCH CH340G) and a Micro-USB connector, coupled with a 3.3-volt regulator to provide both power to the board and connectivity to the host (software development) computer – commonly referred to as the console, making it an easy development platform. With earlier ESP-xx modules, these two items (the USB-to-serial adapter and the regulator) had to be purchased separately and be wired into the ESP-xx circuit. Modern ESP8266 boards like the [[NodeMCU]] are easier to work with and offer more GPIO pins. Most of the boards listed here are based on the ESP-12E module, but new modules are being introduced seemingly every few months.

{| class="wikitable sortable"
|+
|-
! Name !! Active pins !! Pitch !! Form factor !! LEDs !! Antenna !! Shielded !! Dimensions (mm) !! Notes
|-
|Bolt IoT
| style="text-align:center" | 14 || style="text-align:center" | 0.1&nbsp;in || style="text-align:center" | 2×14 DIL || {{yes}} || PCB trace || {{yes}} || style="text-align:center" | 30 × 40 ||Comes with an onboard SD card and features like Lib-Discovery and Fail Safe Mode. Has its own cloud for IoT.
|-
| Olimex MOD-WIFI-ESP8266<ref>{{cite web | url=https://www.olimex.com/Products/IoT/MOD-WIFI-ESP8266/open-source-hardware | title=MOD-WIFI-ESP8266 | publisher=Olimex | accessdate=2015-06-25}}</ref>
| style="text-align:center" | 2 || style="text-align:center" | 0.1&nbsp;in || style="text-align:center" | UEXT module || {{yes}} || PCB trace || {{no}} || {{dunno}} || Only RX/TX are connected to UEXT connector.
|-
| Olimex MOD-WIFI-ESP8266-DEV<ref>{{cite web | url=https://www.olimex.com/Products/IoT/MOD-WIFI-ESP8266-DEV/open-source-hardware | title=MOD-WIFI-ESP8266-DEV | publisher=Olimex | accessdate=2015-06-25}}</ref>
| style="text-align:center" | 20 || style="text-align:center" | 0.1&nbsp;in || style="text-align:center" | 2×11 DIL + castellated || {{yes}} || PCB trace || {{no}} || style="text-align:center" | 33 × 23 || All available GPIO pins are connected, also has pads for soldering UEXT connector (with RX/TX and SDA/SCL signals).
|-
| [[NodeMCU]] DEVKIT || style="text-align:center" | 14 || style="text-align:center" | 0.1&nbsp;in || style="text-align:center" | 2×15 DIL || {{yes}} || PCB trace || {{yes}} || style="text-align:center" | 49 × 24.5 || Uses the ESP-12 module; includes USB to serial interface.
|-
| [[Adafruit Industries|Adafruit]] Huzzah ESP8266 breakout<ref>{{cite web | url=http://www.adafruit.com/product/2471 | title=Adafruit HUZZAH ESP8266 Breakout | publisher=[[Adafruit Industries]] | accessdate=2015-06-25}}</ref>
| style="text-align:center" | 14 || style="text-align:center" | 0.1&nbsp;in || style="text-align:center" | 2×10 DIL || {{yes}} || PCB trace || {{yes}} || style="text-align:center" | 25 × 38 || Uses the ESP-12 module.
|-
| [[SparkFun]] ESP8266 Thing<ref>{{cite web | url=https://www.sparkfun.com/products/13231 | title=SparkFun ESP8266 Thing | publisher=[[SparkFun]] | accessdate=2015-06-27}}</ref> WRL-13231
| style="text-align:center" | 12 || style="text-align:center" | 0.1&nbsp;in || style="text-align:center" | 2×10 DIL || {{yes}} || PCB trace + [[U.FL]]&nbsp;socket || {{no}} || style="text-align:center" | 58 × 26 || FTDI serial header, Micro-USB socket for power, includes Li-ion battery charger.
|-
| [[KNEWRON Technologies]] smartWIFI<ref>{{cite web | url=http://www.knewron.co.in/smartwifi | title=KNEWRON smartWIFI | publisher=[[KNEWRON]] | accessdate=2016-03-04}}</ref>
| style="text-align:center" | 12 || style="text-align:center" | 0.1&nbsp;in || style="text-align:center" | 2×20 DIL || {{yes}} 1 RGB|| PCB trace || {{Yes}} || style="text-align:center" | 25.4 × 50.8 || CP2102 USB bridge, includes battery charger, micro-USB socket for power and battery charging, 1 RGB LED and USER / Reflash button.
|-
| ArduCAM ESP8266 UNO<ref>{{cite web|last1=ESP8266 UNO|title=ArduCAM ESP8266 UNO Board|url=https://www.arducam.com/arducam-esp8266-uno-board-arduino-camera/}}</ref> || style="text-align:center" | 12+ || style="text-align:center" | 0.1&nbsp;in || style="text-align:center" | Arduino Uno || {{yes}} || PCB trace || {{yes}} || style="text-align:center" | 53.4 × 68.6 || Uses the AI Thinker's ESP8266MOD module and features Micro-USB port, Battery pins, Camera pins and uSD card all on the same board. Fully compatible with Arduino Uno shields.
|-
| DoIT ESPduino<ref>{{cite web|last1=ESPduino|title=Arduino ESPduino|url=https://github.com/SmartArduino/SZDOITWiKi/wiki/Arduino---ESPduino}}</ref> || style="text-align:center" | 12 || style="text-align:center" | 0.1&nbsp;in || style="text-align:center" | Arduino Uno || {{yes}} || PCB trace || {{yes}} || style="text-align:center" | 53.4 × 68.6 || Uses the ESP-WROOM-02 (ESP-13) module and USB Type B port. Fully compatible with Arduino Uno shields.
|-
|WeatherPlus - [[SwitchDoc Labs]]<ref>{{cite web|last1=SwitchDoc Labs|title=Grove WeatherPlus|url=https://shop.switchdoc.com/products/weatherplus-all-in-one-weather-station-controller}}</ref> || style="text-align:center" | 26+Grove || style="text-align:center" | 0.1&nbsp;in || style="text-align:center" | Custom || {{yes}} || PCB trace || {{yes}} || style="text-align:center" | 86.0 × 50.0 || Uses the AI Thinker Model ESP8266MOD (ESP-13) module and FTDI for Programming and Mini-USB port for power. Fully compatible with Adafruit Huzzah software.  Includes BMP280 Barometer, ADS1115 and Grove I2C connectors.   Plugs for Anemometer/Wind Vane/Rain Bucket.
|-
| [[WeMos]]<ref name="WeMos">{{cite web|last1=WeMos|title=WEMOS|url=https://www.wemos.cc/|website=WEMOS}}</ref> D1<ref>{{cite web | url=https://wiki.wemos.cc/products:d1:d1 | title=WeMos D1 | publisher=[[WeMos]] | accessdate=2016-11-30}}</ref>|| style="text-align:center" | 12 || style="text-align:center" | 0.1&nbsp;in || style="text-align:center" | Arduino Uno || {{yes}} || PCB trace || {{yes}} || style="text-align:center" | 53.4 × 68.6 || Uses the ESP-12F module and Micro-USB socket. Discontinued in favor of WeMos D1 R2.
|-
| [[WeMos]]<ref name="WeMos" /> D1 R2<ref>{{cite web | url=https://wiki.wemos.cc/products:d1:d1 | title=WeMos D1 R2 | publisher=[[WeMos]] | accessdate=2016-01-05}}</ref>
| style="text-align:center" | 12 || style="text-align:center" | 0.1&nbsp;in || style="text-align:center" | Arduino Uno || {{yes}} || PCB trace || {{yes}} || style="text-align:center" | 53.4 × 68.6 || Uses ESP-12F module and has Micro-USB socket.
|-
| [[WeMos]]<ref name="WeMos" /> D1 mini<ref>{{cite web | url=https://wiki.wemos.cc/products:d1:d1_mini | title=WeMos D1 mini | publisher=[[WeMos]] | accessdate=2017-06-29}}</ref>
| style="text-align:center" | 12 || style="text-align:center" | 0.1&nbsp;in || style="text-align:center" | 2×8 DIL || {{yes}} || PCB trace || {{yes}} || style="text-align:center" | 25.6 × 34.2 || Uses ESP-12S module and has Micro-USB socket.
|-
| [[WeMos]]<ref name="WeMos" /> D1 mini Lite<ref>{{cite web | url=https://wiki.wemos.cc/products:d1:d1_mini_lite | title=WeMos D1 mini Lite | publisher=[[WeMos]] | accessdate=2017-06-29}}</ref>
| style="text-align:center" | 12 || style="text-align:center" | 0.1&nbsp;in || style="text-align:center" | 2×8 DIL || {{yes}} || PCB trace || {{yes}} || style="text-align:center" | 25.6 × 34.2 || Based on the ESP8285, an ESP8266 with 1&nbsp;MiB flash built-in; has Micro-USB socket.
|-
| [[WeMos]]<ref name="WeMos" /> D1 mini Pro<ref>{{cite web | url=https://wiki.wemos.cc/products:d1:d1_mini_pro | title=WeMos D1 mini Pro | publisher=[[WeMos]] | accessdate=2017-06-29}}</ref>
| style="text-align:center" | 12 || style="text-align:center" | 0.1&nbsp;in || style="text-align:center" | 2×8 DIL || {{yes}} || Ceramic and U.FL socket || {{yes}} || style="text-align:center" | 25.6 × 34.2 || Uses ESP8266EX chip; has Micro-USB socket, U.FL antenna connector, and 16 MiB flash.
|-
|ESPert ESPresso Lite<ref>{{Cite web|title = Espert|url = http://www.espert.co|website = Espert|accessdate = 2016-01-07}}</ref>
| style="text-align:center" | 16 || style="text-align:center" | 0.1&nbsp;in || style="text-align:center" | 2×8 DIL || {{yes}} || PCB trace || {{yes}} || style="text-align:center" | 26.5 × 57.6 || Uses the ESP-WROOM-02 module. Produced in limited quantity as beta version.
|-
|ESPert ESPresso Lite V2.0<ref>{{Cite web | title=ESPresso Lite V2.0 |url=http://www.espressolite.com |publisher=Espert Pte Ltd |access-date=2017-10-02}}</ref>
| style="text-align:center" | 24 || style="text-align:center" | 0.1&nbsp;in || style="text-align:center" | 2×10 DIL || {{yes}} || PCB trace || {{yes}} || style="text-align:center" | 28 × 61 || Improved version of ESPresso Lite.
|-
|[[In-Circuit GmbH|In-Circuit]] ESP-ADC<ref>{{Cite web|title = ESP-ADC DIL18 development board|url = http://wiki.in-circuit.de/index.php5?title=ESP8266EX#ESP-ADC_DIL18_development_board|website = In-Circuit Wiki|access-date = 2016-02-03}}</ref>
| style="text-align:center" | 18 || style="text-align:center" | 0.1&nbsp;in || style="text-align:center" | 2×9 DIL || {{no}} || [[U.FL]]&nbsp;socket || {{yes}} || style="text-align:center" | 22.9 × 14.9 || Uses ESP8266EX chip.
|-
| Watterott ESP-WROOM02-Breakout<ref>{{cite web | url=https://github.com/watterott/ESP-WROOM-Breakout | title=Watterott ESP-WROOM02-Breakout | publisher=Watterott | accessdate=2016-11-06}}</ref>
| style="text-align:center" | 14 || style="text-align:center" | 0.1&nbsp;in || style="text-align:center" | 2×10 DIL || {{yes}} || PCB trace || {{yes}} || style="text-align:center" | 40.64 × 27.94 || Uses the Espressif ESP-WROOM-02 module.
|-
| Geek Wave Solution IOT WROOM-02 Dev. Board<ref>{{cite web | url=http://geekwavesolution.com/wifi-development-board | title=Geek Wave Solution ESP8266-WROOM-02-IOT WiFi Development Board | publisher=Geek Wave Solution | accessdate=2017-09-04}}</ref>
| style="text-align:center" | 20 || style="text-align:center" | 0.1&nbsp;in || {{dunno}} || {{Yes}} || PCB trace || {{Yes}} || style="text-align:center" | 93.80 × 80.02 || Development board with Espressif ESP-WROOM-02 module and four relays.
|-
| Witty 2-piece board<ref>{{cite web | url=https://www.adrirobot.it/ESP_witty/esp_witty.htm | title=Witty ESP8266 ESP-12E dual-level board | publisher=N/A | accessdate=2019-08-29}}</ref>
| style="text-align:center" | 20 || style="text-align:center" | 0.1&nbsp;in || {{dunno}} || {{Yes}} || PCB trace || {{Yes}} || style="text-align:center" | ? || Development board with Espressif ESP8266 ESP-12E and separate board for CH340G USB interface.
|-
|}

== ESP32-C3 ==
In 2020, Espressif announced a new chip ESP32-C3, which is pin-compatible with ESP8266. It is based on a single core [[RISC-V]] 32-bit CPU with a clock speed of up to 160 MHz. It includes 400 kB of SRAM and 384 kB ROM storage space built in.<ref>{{cite news|url=https://hackaday.com/2020/11/22/espressif-leaks-esp32-c3-a-wifi-soc-thats-risc-v-and-is-esp8266-pin-compatible/ |title=Espressif Leaks ESP32-C3: A WiFi SOC That's RISC-V and is ESP8266 Pin-Compatible |first=Jenny |last=List |date=2020-11-22 |work=Hackaday }}</ref>

== See also ==
* [[ESP32]] – the successor product from Espressif
* [[Internet of things]]
* [[Microcontroller|MCU (microcontroller unit)]]

== References ==
{{Reflist|30em}}

== External links ==
* [https://github.com/esp8266/Arduino ESP8266 core for Arduino IDE]

{{Commons category}}

[[Category:Microcontrollers]]
[[Category:Internet of things]]
[[Category:Wireless networking hardware]]
[[Category:2014 establishments]]