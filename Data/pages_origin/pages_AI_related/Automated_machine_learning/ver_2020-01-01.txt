{{multiple issues|{{incomprehensible|date=November 2018}}
{{technical|date=November 2018}}
{{prose|date=March 2018}}}}

{{Machine learning bar}}

'''Automated machine learning''' ('''AutoML''') is the process of automating the process of applying [[machine learning]] to real-world problems. AutoML covers the complete pipeline from the raw dataset to the deployable machine learning model. AutoML was proposed as an [[artificial intelligence]]-based solution to the ever-growing challenge of applying machine learning.<ref name="autoweka1">{{cite conference|year=2013|title=Auto-WEKA: Combined Selection and Hyperparameter Optimization of Classification Algorithms|url=https://dl.acm.org/citation.cfm?id=2487629|conference=KDD '13 Proceedings of the 19th ACM SIGKDD international conference on Knowledge discovery and data mining|pages=847–855|vauthors=Thornton C, Hutter F, Hoos HH, Leyton-Brown K}}</ref><ref name="AutoML2014ICML"/> The high degree of automation in AutoML allows non-experts to make use of machine learning models and techniques without requiring to become an expert in this field first. 

Automating the process of applying machine learning end-to-end additionally offers the advantages of producing simpler solutions, faster creation of those solutions, and models that often outperform hand-designed models. 

== Comparison to the standard machine learning approach ==
In a typical machine learning application, practitioners have a dataset consisting of input data points to train on. The raw data itself may not be in a form such that all algorithms may be applicable to it out of the box. An expert may have to apply appropriate [[data pre-processing]], [[feature engineering]], [[feature extraction]], and [[feature selection]] methods that make the dataset amenable for machine learning. Following those preprocessing steps, practitioners must then perform [[algorithm selection]] and [[hyperparameter optimization]] to maximize the predictive performance of their machine learning model. Clearly all of those steps induce their own challenges, accumulating to a significant hurdle to get started with machine learning.

A downside are the additional parameters of AutoML tools, which may need some expertise to be set themselves. Although those hyperparameters exist, AutoML simplifies the application of machine learning for non-experts dramatically.

==Targets of automation==
Automated machine learning can target various stages of the machine learning process.<ref name="AutoML2014ICML">{{Cite web|title=AutoML 2014 @ ICML|vauthors=Hutter F, Caruana R, Bardenet R, Bilenko M, Guyon I, Kegl B, and Larochelle H|work=AutoML 2014 Workshop @ ICML|date =|access-date=2018-03-28|url=http://icml2014.automl.org}}</ref> Essentially the targets can be grouped into the fields data preparation, feature engineering, model selection, selection of evaluation metrics, and hyperparameter optimization.
* Automated [[data preparation]] and ingestion (from raw data and miscellaneous formats)
** Automated column type detection; e.g., boolean, discrete numerical, continuous numerical, or text
** Automated column intent detection; e.g., target/label, [[Stratified sampling|stratification]] field, numerical feature, categorical text feature, or free text feature
** Automated task detection; e.g., [[binary classification]], [[regression analysis|regression]], clustering, or [[learning to rank|ranking]]
* Automated [[feature engineering]]
** [[Feature selection]]
** [[Feature extraction]]
** [[Meta learning (computer science)|Meta learning]] and [[transfer learning]]
** Detection and handling of skewed data and/or missing values
* Automated [[model selection]]
* [[Hyperparameter (machine learning)#Optimization|Hyperparameter optimization]] of the learning algorithm and featurization
* Automated pipeline selection under time, memory, and complexity constraints
* Automated selection of evaluation metrics / validation procedures
* Automated problem checking
** Leakage detection
** Misconfiguration detection
* Automated analysis of results obtained
* User interfaces and visualizations for automated machine learning

==Examples==
Notable platforms tackling various stages of AutoML:

===Hyperparameter optimization and model selection===
* [[Auto-WEKA]]<ref name="autoweka2">{{cite journal|vauthors=Kotthoff L, Thornton C, Hoos HH, Hutter F, Leyton-Brown K|year=2017|title=Auto-WEKA 2.0: Automatic model selection and hyperparameter optimization in WEKA|url=http://jmlr.org/papers/v18/16-261.html|journal=Journal of Machine Learning Research|volume=18|issue=25|pages=1–5}}</ref><ref name="towards_automl">{{cite arxiv|vauthors=Truong A, Walters A, Goodsitt J, Hines K, Bruss B, Farivar R|title=Towards Automated Machine Learning: Evaluation and Comparison of AutoML Approaches and Tools|eprint=1908.05557|class=cs.LG|date=2019}}</ref><ref name="automl_bm">{{cite arxiv|vauthors=Gijsbers P, LeDell E, Thomas J, Poirier S, Bischl B, Vanschoren J|title=An Open Source AutoML Benchmark|url=https://www.automl.org/wp-content/uploads/2019/06/automlws2019_Paper45.pdf|eprint=1907.00909|class=cs.LG|date=2019}}</ref> is a Bayesian hyperparameter optimization layer on top of [[Weka (machine learning)|WEKA]].
*[https://automl.github.io/auto-sklearn/master/ auto-sklearn]<ref name="autosklearn">{{cite journal|vauthors=Feurer M, Klein A, Eggensperger K, Springenberg J, Blum M, Hutter F|year=2015|title=Efficient and Robust Automated Machine Learning|url=https://papers.nips.cc/paper/5872-efficient-and-robust-automated-machine-learning|journal=Advances in Neural Information Processing Systems 28 (NIPS 2015)|pages=2962–2970}}</ref><ref name="towards_automl"/><ref name="automl_bm"/> is a Bayesian hyperparameter optimization layer on top of [[scikit-learn]].
*ATM<ref>{{Cite journal|last=Swearingen|first=Thomas|last2=Drevo|first2=Will|last3=Cyphers|first3=Bennett|last4=Cuesta-Infante|first4=Alfredo|last5=Ross|first5=Arun|last6=Veeramachaneni|first6=Kalyan|date=December 2017|title=ATM: A distributed, collaborative, scalable system for automated machine learning|journal=2017 IEEE International Conference on Big Data (Big Data)|publisher=IEEE|volume=|pages=151–162|doi=10.1109/bigdata.2017.8257923|isbn=9781538627150}}</ref> is an open source software library under the ''Human Data Interaction'' project (HDI) at MIT. It is a distributed, scalable AutoML system designed with ease of use in mind.
* [http://docs.h2o.ai/h2o/latest-stable/h2o-docs/automl.html H2O AutoML]<ref name="towards_automl"/><ref name="automl_bm"/> provides automated data preparation, hyperparameter tuning via [[random search]], and stacked ensembles in a distributed machine learning platform.
*[https://github.com/rleiva/fastautoml Fast AutoML] is a Python library built on top of [[scikit-learn]]. It is based on the Nescience Principle ([http://www.mathematicsunknown.com/nescience.pdf The Mathematics of the Unknown]) and supports a hyperparameter-free approach for decision tree construction without overfitting.<ref>{{Cite journal|last=Leiva|first=Rafael Garcia|last2=Anta|first2=Antonio Fernandez|last3=Mancuso|first3=Vincenzo|last4=Casari|first4=Paolo|date=2019-06-04|title=A Novel Hyperparameter-free Approach to Decision Tree Construction that Avoids Overfitting by Design|url=http://arxiv.org/abs/1906.01246|journal=arXiv:1906.01246 [cs, stat]}}</ref>

===Full pipeline optimization===
* TPOT<ref name="tpot1">{{cite book|vauthors=Olson RS, Urbanowicz RJ, Andrews PC, Lavender NA, Kidd L, Moore JH|year=2016|title=Automating biomedical data science through tree-based pipeline optimization|journal=Proceedings of EvoStar 2016|volume=9597|pages=123–137|doi=10.1007/978-3-319-31204-0_9|arxiv=1601.07925|series=Lecture Notes in Computer Science|isbn=978-3-319-31203-3}}</ref><ref name="tpot2">{{cite book|vauthors=Olson RS, Bartley N, Urbanowicz RJ, Moore JH|year=2016|title=Evaluation of a Tree-based Pipeline Optimization Tool for Automating Data Science|url=https://dl.acm.org/citation.cfm?id=2908918|journal=Proceedings of EvoBIO 2016|pages=485–492|doi=10.1145/2908812.2908918|arxiv=1603.06212|isbn=9781450342063|series=Gecco '16}}</ref><ref name="towards_automl"/><ref name="automl_bm"/> is a [[Python (programming language)|Python]] library that automatically creates and optimizes full machine learning pipelines using [[genetic programming]].
* [http://docs.h2o.ai/driverless-ai/latest-stable/docs/userguide/index.html H2O Driverless AI]<ref name="towards_automl"/><ref name="dai1">{{Cite news|url=https://www.infoworld.com/article/3236048/review-h2oai-automates-machine-learning.html|title=Review: H2O.ai automates machine learning|last=Heller|first=Martin|date=6 November 2017|work=Infoworld|access-date=}}</ref><ref name="dai2">{{Cite news|url=https://www.wsj.com/articles/startup-aims-to-democratize-ai-11566421150|title=Startup Aims to Democratize AI|last=Janofsky|first=Adam|date=21 August 2019|work=WSJ|access-date=21 August 2019}}</ref> is an automated machine learning platform developed by H2O.ai for automated visualization, feature engineering, model training, hyperparameter optimization, and explainability. 
*[https://dotdata.com/dotdata-enterprise/ dotData Enterprise]<ref>{{Cite news|url=https://www.datanami.com/2019/02/01/making-ml-explainable-again/|title=Making ML Explainable Again|last=Woodie|first=Alex|date=1 February 2019|work=datanami|access-date=}}</ref> is an automated machine learning platform developed by dotData for automated feature engineering, model training, hyperparameter optimization explainability and operationalization of AI and ML models.
* TransmogrifAI<ref name="engi_Open">{{Cite web|title=Open Sourcing TransmogrifAI – Automated Machine Learning for Structured Data - Salesforce Engineering|author=Shubha Nabar|work=Salesforce Engineering|date=16 August 2018|access-date=16 August 2018|url=https://engineering.salesforce.com/open-sourcing-transmogrifai-4e5d0e098da2|language=English}}</ref><ref name="vent_Sale">{{Cite web|title=Salesforce open-sources TransmogrifAI, the machine learning library that powers Einstein|author=Kyle Wiggers|work=VentureBeat|date=16 August 2018|access-date=16 August 2018|url=https://venturebeat.com/2018/08/16/salesforce-open-sources-transmogrifai-the-machine-learning-library-that-powers-einstein/|quote=Once TransmogrifAI has extracted features from the dataset, it’s primed to begin automated model training. At this stage, it runs a cadre of machine learning algorithms in parallel on the data, automatically selects the best-performing model, and samples and recalibrates predictions to avoid imbalanced data.}}</ref><ref name="towards_automl"/> is a [[Scala (programming language)|Scala]]/[[Apache Spark#MLlib Machine Learning Library|SparkML]] library created by [[Salesforce]] for automated data cleansing, feature engineering, model selection, and hyperparameter optimization
*RECIPE <ref>{{Citation|last=de Sá|first=Alex G. C.|title=RECIPE: A Grammar-Based Framework for Automatically Evolving Classification Pipelines|date=2017|work=Lecture Notes in Computer Science|pages=246–261|publisher=Springer International Publishing|doi=10.1007/978-3-319-55696-3_16|isbn=9783319556956|last2=Pinto|first2=Walter José G. S.|last3=Oliveira|first3=Luiz Otavio V. B.|last4=Pappa|first4=Gisele L.}}</ref> is a framework based on grammar-based genetic programming that builds customized scikit-learn classification pipelines.
*GA-Auto-MLC<ref>{{Cite journal|last=de Sá|first=Alex G. C.|last2=Pappa|first2=Gisele L.|last3=Freitas|first3=Alex A.|date=2017|title=Towards a Method for Automatically Selecting and Configuring Multi-label Classification Algorithms|journal=Proceedings of the Genetic and Evolutionary Computation Conference Companion|series=GECCO '17|location=New York, NY, USA|publisher=ACM|pages=1125–1132|doi=10.1145/3067695.3082053|isbn=9781450349390}}</ref> and Auto-MEKA<sub>GGP</sub><ref>{{Cite journal|last=de Sá|first=Alex G. C.|last2=Freitas|first2=Alex A.|last3=Pappa|first3=Gisele L.|date=2018|editor-last=Auger|editor-first=Anne|editor2-last=Fonseca|editor2-first=Carlos M.|editor3-last=Lourenço|editor3-first=Nuno|editor4-last=Machado|editor4-first=Penousal|editor5-last=Paquete|editor5-first=Luís|editor6-last=Whitley|editor6-first=Darrell|title=Automated Selection and Configuration of Multi-Label Classification Algorithms with Grammar-Based Genetic Programming|journal=Parallel Problem Solving from Nature – PPSN XV|volume=11102|series=Lecture Notes in Computer Science|publisher=Springer International Publishing|pages=308–320|doi=10.1007/978-3-319-99259-4_25|isbn=9783319992594|url=https://kar.kent.ac.uk/68970/1/PPSN-2018-de-Sa.pdf}}</ref> are freely-available methods that perform automated multi-label classification on the [http://waikato.github.io/meka MEKA software].<ref>{{Cite journal|last=Read|first=Jesse|last2=Reutemann|first2=Peter|last3=Pfahringer|first3=Bernhard|last4=Holmes|first4=Geoff|date=January 2016|title=Meka: A Multi-label/Multi-target Extension to Weka|url=http://dl.acm.org/citation.cfm?id=2946645.2946666|journal=J. Mach. Learn. Res.|volume=17|issue=1|pages=667–671|issn=1532-4435}}</ref>
*[https://mlplan.org ML-Plan]<ref>{{cite journal|last1=Mohr|first1=Felix|last2=Wever|first2=Marcel|last3=Hüllermeier|first3=Eyke|title=ML-Plan: Automated machine learning via hierarchical planning|journal=Machine Learning|date=3 July 2018|volume=107|issue=8–10|pages=1495–1515|doi=10.1007/s10994-018-5735-z}}</ref> is an open-source AutoML tool based on Hierarchical Task Network planning, which is implemented to work with [[Weka (machine learning)|WEKA]] and [[scikit-learn]] algorithms. Furthermore it has been extended to support an unlimited number of preprocessing steps<ref>{{cite journal|last1=Wever|first1=Marcel|last2=Mohr|first2=Felix|last3=Hüllermeier|first3=Eyke|title=ML-Plan for Unlimited-Length Machine Learning Pipelines|journal=ICML 2018 AutoML Workshop|url=https://pdfs.semanticscholar.org/bb9c/42ec387d1e3428a13f408c205155f6e62a34.pdf}}</ref> using [[scikit-learn]] and for the problem domain of multi-label classification<ref>{{cite journal|last1=Wever|first1=Marcel|last2=Mohr|first2=Felix|last3=Tornede|first3=Alexander|last4=Hüllermeier|first4=Eyke|title=Automating Multi-Label Classification Extending ML-Plan|journal=6th ICML Workshop on Automated Machine Learning|url=https://ris.uni-paderborn.de/record/10232}}</ref> based on [http://waikato.github.io/meka MEKA].
*[http://www.remixauto.ml RemixAutoML]<ref>{{Cite web|url=https://analytixon.com/2019/06/01/distilled-news-1086/|title=Distilled News|last=Laux|first=Michael|date=31 May 2019|website=AnalytiXon|language=en-US|access-date=17 September 2019}}</ref><ref>{{Cite web|url=https://www.remixinstitute.com/blog/why-machine-learning-is-more-practical-than-time-series-in-the-real-world/|title=Why Machine Learning is more Practical than Econometrics in the Real World|last=Antico|first=Adrian|date=19 August 2019|website=Remix Institute|language=en-US|access-date=17 September 2019}}</ref> is an open-source package in [[R (programming language)|R]] for automated machine learning, automated feature engineering, automated [[time series]] modeling, automated [[Recommender system|recommender systems]], and automated anomaly detection.
*[https://pathmind.com/ Pathmind]<ref>{{Cite web|url=https://www.anylogic.com/blog/anylogic-and-skymind-video-simulation-and-automated-deep-learning/|title=AnyLogic and Skymind video: Simulation and Automated Deep Learning|website=www.anylogic.com|language=en|access-date=2019-11-22}}</ref> is a cloud based platform that uses automated [[deep reinforcement learning]] to develop policies in [[AnyLogic]]<ref>{{Cite web|url=https://www.anylogic.com/features/artificial-intelligence/|title=Artificial Intelligence and Simulation|website=www.anylogic.com|language=en|access-date=2019-11-22}}</ref> simulation models.

===Deep neural network architecture search===
*AutoKeras<ref name="autokeras">{{cite conference|vauthors=Haifeng J, Qingquan S, Xia H|year=2019|title=Auto-Keras: An Efficient Neural Architecture Search System|conference=Proceedings of the 25th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining|pages=1946–1956|publisher=ACM}}</ref> is an open-source python package for [[neural architecture search]].

==See also==
* [[Neural architecture search]]
* [[Hyperparameter optimization]]
* [[Model selection]]
* [[Neuroevolution]]
* [[Self-tuning]]

==References==
{{Reflist}}

[[Category:Machine learning]]
[[Category:Artificial intelligence]]