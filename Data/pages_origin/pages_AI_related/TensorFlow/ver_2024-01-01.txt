{{short description|Machine learning software library}}
{{Use mdy dates|date=November 2017}}
{{Infobox software
| name = TensorFlow
| logo = [[File:TensorFlow logo.svg|frameless|center|TensorFlow logo]]
| author = 
| developer = [[Google Brain]] Team<ref name=Credits />
| released = {{Start date and age|2015|11|09}}
| latest release version = <!-- {{LSR/wikidata}} -->
| repo = {{URL|https://github.com/tensorflow/tensorflow}}
| programming language = [[Python (programming language)|Python]], [[C++]], [[CUDA]]
| platform = [[Linux]], [[macOS]], [[Windows]], [[Android (operating system)|Android]], [[JavaScript]]<ref name="js">{{cite web |title=TensorFlow.js |url=https://js.tensorflow.org/faq/ |access-date=28 June 2018 <!--no longer in link, nor found in archive.org: |quote=TensorFlow.js has an API similar to the TensorFlow Python API, however it does not support all of the functionality of the TensorFlow Python API.-->}}</ref>
| genre = [[Machine learning]] [[Library (computing)|library]]
| license = [[Apache License 2.0]]
| website = {{URL|https://tensorflow.org}}
}}
{{Machine learning}}

'''TensorFlow''' is a [[Free and open-source software|free and open-source]] [[Library (computing)|software library]] for [[machine learning]] and [[artificial intelligence]]. It can be used across a range of tasks but has a particular focus on [[Types of artificial neural networks#Training|training]] and [[Statistical inference|inference]] of [[deep neural networks]].<ref>{{Cite conference|conference=Proceedings of the 12th USENIX Symposium on Operating Systems Design and Implementation (OSDI ’16).|date=2016|title=TensorFlow: A System for Large-Scale Machine Learning|url=https://www.usenix.org/system/files/conference/osdi16/osdi16-abadi.pdf|last1=Abadi|first1=Martín|last2=Barham|first2=Paul|last3=Chen|first3=Jianmin|last4=Chen|first4=Zhifeng|last5=Davis|first5=Andy|last6=Dean|first6=Jeffrey|last7=Devin|first7=Matthieu|last8=Ghemawat|first8=Sanjay|last9=Irving|first9=Geoffrey|last10=Isard|first10=Michael|last11=Kudlur|first11=Manjunath|last12=Levenberg|first12=Josh|last13=Monga|first13=Rajat|last14=Moore|first14=Sherry|last15=Murray|first15=Derek G.|last16=Steiner|first16=Benoit|last17=Tucker|first17=Paul|last18=Vasudevan|first18=Vijay|last19=Warden|first19=Pete|last20=Wicke|first20=Martin|last21=Yu|first21=Yuan|last22=Zheng|first22=Xiaoqiang|arxiv=1605.08695}}</ref><ref name=YoutubeClip>{{cite AV media|url=https://www.youtube.com/watch?v=oZikw5k_2FM| archive-url=https://ghostarchive.org/varchive/youtube/20211111/oZikw5k_2FM| archive-date=2021-11-11 | url-status=live|title=TensorFlow: Open source machine learning|year= 2015|publisher=Google|ref={{harvid|Video clip by Google about TensorFlow|2015}}}}{{cbignore}} "It is machine learning software being used for various kinds of perceptual and language understanding tasks" – Jeffrey Dean, minute 0:47 / 2:17 from YouTube clip</ref>

TensorFlow was developed by the [[Google Brain]] team for internal [[Google]] use in research and production.<ref>{{harvnb|Video clip by Google about TensorFlow|2015}} at minute 0:15/2:17</ref><ref>{{harvnb|Video clip by Google about TensorFlow|2015}} at minute 0:26/2:17</ref><ref>{{harvnb|Dean et al|2015|p=2}}</ref> The initial version was released under the [[Apache License 2.0]] in 2015.<ref name="Credits">{{cite web |title = Credits |url = https://tensorflow.org/about |website = TensorFlow.org |access-date = November 10, 2015 }}</ref><ref name="Metz-Nov9">{{cite web |last1 = Metz |first1 = Cade |title = Google Just Open Sourced TensorFlow, Its Artificial Intelligence Engine |url = https://www.wired.com/2015/11/google-open-sources-its-artificial-intelligence-engine/ |website = [[Wired (website)|Wired]] |access-date = November 10, 2015 |date = November 9, 2015 }}</ref> Google released the updated version of TensorFlow, named TensorFlow 2.0, in September 2019.<ref name=":12" />

TensorFlow can be used in a wide variety of programming languages, including [[Python (programming language)|Python]], [[JavaScript]], [[C++]], and [[Java (programming language)|Java]].<ref name=":13">{{cite web|title=API Documentation|url=https://www.tensorflow.org/api_docs/|access-date=2018-06-27}}</ref> This flexibility lends itself to a range of applications in many different sectors.

== History ==
=== DistBelief ===
Starting in 2011, Google Brain built DistBelief as a [[Proprietary software|proprietary]] [[machine learning]] system based on [[deep learning]] [[Artificial neural network|neural networks]]. Its use grew rapidly across diverse [[Alphabet Inc.|Alphabet]] companies in both research and commercial applications.<ref name=whitepaper2015>{{cite web |last1 = Dean |first1 = Jeff |last2 = Monga |first2 = Rajat |first3 = Sanjay |last3 = Ghemawat |display-authors = 2 |author-link1 = Jeff Dean (computer scientist) |title = TensorFlow: Large-scale machine learning on heterogeneous systems |url = http://download.tensorflow.org/paper/whitepaper2015.pdf |website = TensorFlow.org |publisher = Google Research |access-date = November 10, 2015 |date = November 9, 2015 |ref={{harvid|Dean et al|2015}}}}</ref><ref name=Perez>{{cite web |last1 = Perez |first1 = Sarah |title = Google Open-Sources The Machine Learning Tech Behind Google Photos Search, Smart Reply And More |url = https://techcrunch.com/2015/11/09/google-open-sources-the-machine-learning-tech-behind-google-photos-search-smart-reply-and-more/ |website = TechCrunch |access-date = November 11, 2015 |date = November 9, 2015 }}</ref> Google assigned multiple computer scientists, including [[Jeff Dean (computer scientist)|Jeff Dean]], to simplify and [[Code refactoring|refactor]] the codebase of DistBelief into a faster, more robust application-grade library, which became TensorFlow.<ref name=Oremus>{{cite web |last1 = Oremus |first1 = Will |title = What Is TensorFlow, and Why Is Google So Excited About It? |url = https://www.slate.com/blogs/future_tense/2015/11/09/google_s_tensorflow_is_open_source_and_it_s_about_to_be_a_huge_huge_deal.html |website = Slate |access-date = November 11, 2015 |date = November 9, 2015 }}</ref> In 2009, the team, led by [[Geoffrey Hinton]], had implemented generalized [[backpropagation]] and other improvements which allowed generation of [[neural network]]s with substantially higher accuracy, for instance a 25% reduction in errors in [[speech recognition]].<ref name=Ward-Bailey>{{cite web |last1 = Ward-Bailey |first1 = Jeff |title = Google chairman: We're making 'real progress' on artificial intelligence |url = https://www.csmonitor.com/Technology/2015/0914/Google-chairman-We-re-making-real-progress-on-artificial-intelligence |website = CSMonitor |access-date = November 25, 2015 |date = November 25, 2015 }}</ref>

=== TensorFlow ===
TensorFlow is Google Brain's second-generation system. Version 1.0.0 was released on February 11, 2017.<ref>{{cite journal|url=https://github.com/tensorflow/tensorflow/blob/07bb8ea2379bd459832b23951fb20ec47f3fdbd4/RELEASE.md|title=Tensorflow Release 1.0.0|website=[[GitHub]]|year=2022 |doi=10.5281/zenodo.4724125 |author1=TensorFlow Developers }}</ref>  While the [[reference implementation]] runs on single devices, TensorFlow can run on multiple [[central processing unit|CPUs]] and [[GPU]]s (with optional [[CUDA]] and [[SYCL]] extensions for [[general-purpose computing on graphics processing units]]).<ref name=Metz-Nov10>{{cite news |last1 = Metz |first1 = Cade |title = TensorFlow, Google's Open Source AI, Points to a Fast-Changing Hardware World |url = https://www.wired.com/2015/11/googles-open-source-ai-tensorflow-signals-fast-changing-hardware-world/ |access-date = November 11, 2015 |magazine = Wired |date = November 10, 2015 }}</ref> TensorFlow is available on 64-bit [[Linux]], [[macOS]], [[Windows]], and mobile computing platforms including [[Android (operating system)|Android]] and [[iOS]].

Its flexible architecture allows for the easy deployment of computation across a variety of platforms (CPUs, GPUs, [[Tensor processing unit|TPU]]s), and from desktops to clusters of servers to mobile and edge devices.

TensorFlow computations are expressed as [[State (computer science)|stateful]] [[dataflow programming|dataflow]] [[directed graph|graphs]]. The name TensorFlow derives from the operations that such neural networks perform on multidimensional data arrays, which are referred to as ''[[tensor]]s''. During the [[Google I/O|Google I/O Conference]] in June 2016, Jeff Dean stated that 1,500 repositories on [[GitHub]] mentioned TensorFlow, of which only 5 were from Google.<ref name="1500repo's">[https://www.youtube.com/watch?v=Rnm83GqgqPE  Machine Learning: Google I/O 2016 Minute 07:30/44:44 ] accessdate=2016-06-05</ref>

In December 2017, developers from Google, Cisco, RedHat, CoreOS, and CaiCloud introduced [[Kubeflow]] at a conference. Kubeflow allows operation and deployment of TensorFlow on [[Kubernetes]].

In March 2018, Google announced TensorFlow.js version 1.0 for machine learning in [[JavaScript]].<ref>{{cite web|url=https://medium.com/tensorflow/introducing-tensorflow-js-machine-learning-in-javascript-bf3eab376db|title=Introducing TensorFlow.js: Machine Learning in Javascript|last=TensorFlow|date=2018-03-30|website=Medium|access-date=2019-05-24}}</ref>

In Jan 2019, Google announced TensorFlow 2.0.<ref>{{cite web|url=https://medium.com/tensorflow/whats-coming-in-tensorflow-2-0-d3663832e9b8|title=What's coming in TensorFlow 2.0|last=TensorFlow|date=2019-01-14|website=Medium|access-date=2019-05-24}}</ref> It became officially available in Sep 2019.<ref name=":12">{{cite web|url=https://medium.com/tensorflow/tensorflow-2-0-is-now-available-57d706c2a9ab|title=TensorFlow 2.0 is now available!|last=TensorFlow|date=2019-09-30|website=Medium|access-date=2019-11-24}}</ref>

In May 2019, Google announced TensorFlow Graphics for deep learning in computer graphics.<ref>{{cite web|url=https://medium.com/tensorflow/introducing-tensorflow-graphics-computer-graphics-meets-deep-learning-c8e3877b7668|title=Introducing TensorFlow Graphics: Computer Graphics Meets Deep Learning|last=TensorFlow|date=2019-05-09|website=Medium|access-date=2019-05-24}}</ref>

=== Tensor processing unit (TPU) ===
{{main|Tensor processing unit}}
In May 2016, Google announced its [[Tensor processing unit]] (TPU), an [[application-specific integrated circuit]] (ASIC, a hardware chip) built specifically for [[machine learning]] and tailored for TensorFlow. A TPU is a programmable [[AI accelerator (computer hardware)|AI accelerator]] designed to provide high [[throughput]] of low-precision [[arithmetic]] (e.g., [[8-bit]]), and oriented toward using or running models rather than [[Supervised learning|training]] them. Google announced they had been running TPUs inside their data centers for more than a year, and had found them to deliver an [[order of magnitude]] better-optimized [[performance per watt]] for machine learning.<ref>{{cite web |author-link1=Norman Jouppi |last1 = Jouppi |first1 = Norm |title = Google supercharges machine learning tasks with TPU custom chip |url = https://cloudplatform.googleblog.com/2016/05/Google-supercharges-machine-learning-tasks-with-custom-chip.html |website = Google Cloud Platform Blog |access-date = May 19, 2016 }}</ref>

In May 2017, Google announced the second-generation, as well as the availability of the TPUs in [[Google Compute Engine]].<ref>{{cite news|url=https://www.blog.google/topics/google-cloud/google-cloud-offer-tpus-machine-learning/|title=Build and train machine learning models on our new Google Cloud TPUs|date=May 17, 2017|work=Google|access-date=May 18, 2017}}</ref> The second-generation TPUs deliver up to 180 teraflops of performance, and when organized into clusters of 64 TPUs, provide up to 11.5 petaflops.

In May 2018, Google announced the third-generation TPUs delivering up to 420 teraflops of performance and 128 GB high [[Bandwidth (computing)|bandwidth]] memory (HBM). Cloud TPU v3 Pods offer 100+ petaflops of performance and 32 TB HBM.<ref>{{cite web|url=https://cloud.google.com/tpu/|title=Cloud TPU|website=Google Cloud|access-date=2019-05-24}}</ref>

In February 2018, Google announced that they were making TPUs available in beta on the [[Google Cloud Platform]].<ref>{{cite news|url=https://cloudplatform.googleblog.com/2018/02/Cloud-TPU-machine-learning-accelerators-now-available-in-beta.html|title=Cloud TPU machine learning accelerators now available in beta|work=Google Cloud Platform Blog|access-date=2018-02-12}}</ref>

=== Edge TPU ===
In July 2018, the Edge TPU was announced. Edge TPU is Google's purpose-built [[Application-specific integrated circuit|ASIC]] chip designed to run TensorFlow Lite machine learning (ML) models on small client computing devices such as smartphones<ref>{{cite web|url=https://beebom.com/google-announces-edge-tpu-cloud-iot-edge-at-cloud-next-2018/|title=Google Announces Edge TPU, Cloud IoT Edge at Cloud Next 2018|last=Kundu|first=Kishalaya|date=2018-07-26|website=Beebom|language=en-US|access-date=2019-02-02}}</ref> known as [[edge computing]].

=== TensorFlow Lite ===
In May 2017, Google announced a software stack specifically for mobile development, TensorFlow Lite.<ref>{{cite web|url=https://www.theverge.com/2017/5/17/15645908/google-ai-tensorflowlite-machine-learning-announcement-io-2017|title=Google's new machine learning framework is going to put more AI on your phone|date=May 17, 2017}}</ref> In January 2019, the TensorFlow team released a developer preview of the mobile GPU inference engine with OpenGL ES 3.1 Compute Shaders on Android devices and Metal Compute Shaders on iOS devices.<ref>{{cite web|url=https://medium.com/tensorflow/tensorflow-lite-now-faster-with-mobile-gpus-developer-preview-e15797e6dee7|title=TensorFlow Lite Now Faster with Mobile GPUs (Developer Preview)|last=TensorFlow|date=2019-01-16|website=Medium|access-date=2019-05-24}}</ref> In May 2019, Google announced that their TensorFlow Lite Micro (also known as TensorFlow Lite for Microcontrollers) and [[Arm Holdings|ARM's]] uTensor would be merging.<ref>{{cite web|url=https://os.mbed.com/blog/entry/uTensor-and-Tensor-Flow-Announcement/|title=uTensor and Tensor Flow Announcement {{!}} Mbed|website=os.mbed.com|access-date=2019-05-24}}</ref>

=== Pixel Visual Core (PVC) ===
In October 2017, Google released the [[Google Pixel 2]] which featured their [[Pixel Visual Core]] (PVC), a fully programmable [[image processor|image]], [[vision processing unit|vision]] and [[AI accelerator|AI]] processor for mobile devices. The PVC supports TensorFlow for machine learning (and [[Halide (programming language)|Halide]] for image processing).

=== TensorFlow 2.0 ===

As TensorFlow's market share among research papers was declining to the advantage of [[PyTorch]],<ref name=":9">{{cite web|url=https://thegradient.pub/state-of-ml-frameworks-2019-pytorch-dominates-research-tensorflow-dominates-industry/|title=The State of Machine Learning Frameworks in 2019|publisher=The Gradient|first1=Horace|last1=He|date=10 October 2019|access-date=22 May 2020}}</ref> the TensorFlow Team announced a release of a new major version of the library in September 2019. TensorFlow 2.0 introduced many changes, the most significant being TensorFlow eager, which changed the automatic differentiation scheme from the static computational graph, to the "Define-by-Run" scheme originally made popular by [[Chainer]] and later [[PyTorch]].<ref name=":9" /> Other major changes included removal of old libraries, cross-compatibility between trained models on different versions of TensorFlow, and significant improvements to the performance on GPU.<ref>{{cite web|url=https://blog.tensorflow.org/2019/09/tensorflow-20-is-now-available.html|title=TensorFlow 2.0 is now available! |publisher=TensorFlow Blog|date=30 September 2019|access-date=22 May 2020}}</ref>{{Primary source inline|date=August 2020}}

== Features ==

=== AutoDifferentiation ===
[[Automatic differentiation|AutoDifferentiation]] is the process of automatically calculating the gradient vector of a model with respect to each of its parameters. With this feature, TensorFlow can automatically compute the gradients for the parameters in a model, which is useful to algorithms such as [[backpropagation]] which require gradients to optimize performance.<ref name=":0">{{Cite web|title=Introduction to gradients and automatic differentiation|url=https://www.tensorflow.org/guide/autodiff|access-date=2021-11-04|website=TensorFlow|language=en}}</ref> To do so, the framework must keep track of the order of operations done to the input Tensors in a model, and then compute the gradients with respect to the appropriate parameters.<ref name=":0" />

=== Eager execution ===
TensorFlow includes an “eager execution” mode, which means that operations are evaluated immediately as opposed to being added to a computational graph which is executed later.<ref name=":3">{{Cite web|title=Eager execution {{!}} TensorFlow Core|url=https://www.tensorflow.org/guide/eager|access-date=2021-11-04|website=TensorFlow|language=en}}</ref> Code executed eagerly can be examined step-by step-through a debugger, since data is augmented at each line of code rather than later in a computational graph.<ref name=":3" /> This execution paradigm is considered to be easier to debug because of its step by step transparency.<ref name=":3" />

=== Distribute ===
In both eager and graph executions, TensorFlow provides an API for distributing computation across multiple devices with various distribution strategies.<ref name=":4">{{Cite web|title=Module: tf.distribute {{!}} TensorFlow Core v2.6.1|url=https://www.tensorflow.org/api_docs/python/tf/distribute|access-date=2021-11-04|website=TensorFlow|language=en}}</ref> This [[distributed computing]] can often speed up the execution of training and evaluating of TensorFlow models and is a common practice in the field of AI.<ref name=":4" /><ref>{{Cite book|last=Sigeru.|first=Omatu|url=http://worldcat.org/oclc/980886715|title=Distributed Computing and Artificial Intelligence, 11th International Conference|date=2014|publisher=Springer International Publishing|isbn=978-3-319-07593-8|oclc=980886715}}</ref>

=== Losses ===
To train and assess models, TensorFlow provides a set of [[loss function]]s (also known as [[Mathematical optimization|cost functions]]).<ref name=":5">{{Cite web|title=Module: tf.losses {{!}} TensorFlow Core v2.6.1|url=https://www.tensorflow.org/api_docs/python/tf/losses|access-date=2021-11-04|website=TensorFlow|language=en}}</ref> Some popular examples include [[mean squared error]] (MSE) and [[Cross entropy|binary cross entropy]] (BCE).<ref name=":5" /> These loss functions compute the “error” or “difference” between a model's output and the expected output (more broadly, the difference between two tensors). For different datasets and models, different losses are used to prioritize certain aspects of performance.

=== Metrics ===
In order to assess the performance of machine learning models, TensorFlow gives API access to commonly used metrics. Examples include various accuracy metrics (binary, categorical, sparse categorical) along with other metrics such as [[Precision and recall|Precision, Recall]], and [[Jaccard index|Intersection-over-Union]] (IoU).<ref>{{Cite web|title=Module: tf.metrics {{!}} TensorFlow Core v2.6.1|url=https://www.tensorflow.org/api_docs/python/tf/metrics|access-date=2021-11-04|website=TensorFlow|language=en}}</ref>

=== TF.nn ===
TensorFlow.nn is a module for executing primitive [[Artificial neural network|neural network]] operations on models.<ref name=":10">{{Cite web|title=Module: tf.nn {{!}} TensorFlow Core v2.7.0|url=https://www.tensorflow.org/api_docs/python/tf/nn|access-date=2021-11-06|website=TensorFlow|language=en}}</ref> Some of these operations include variations of [[Convolutional neural network|convolutions]] (1/2/3D, Atrous, depthwise), [[activation function]]s ([[Softmax function|Softmax]], [[Rectifier (neural networks)|RELU]], GELU, [[Sigmoid function|Sigmoid]], etc.) and their variations, and other operations ([[Max pooling|max-pooling]], bias-add, etc.).<ref name=":10" />

=== Optimizers ===
TensorFlow offers a set of optimizers for training neural networks, including [[Adam (optimization algorithm)|ADAM]], [[Adagrad|ADAGRAD]], and [[Stochastic gradient descent|Stochastic Gradient Descent]] (SGD).<ref name=":11">{{Cite web|title=Module: tf.optimizers {{!}} TensorFlow Core v2.7.0|url=https://www.tensorflow.org/api_docs/python/tf/optimizers|access-date=2021-11-06|website=TensorFlow|language=en}}</ref> When training a model, different optimizers offer different modes of parameter tuning, often affecting a model's convergence and performance.<ref>{{Cite book|last1=Dogo|first1=E. M.|last2=Afolabi|first2=O. J.|last3=Nwulu|first3=N. I.|last4=Twala|first4=B.|last5=Aigbavboa|first5=C. O.|title=2018 International Conference on Computational Techniques, Electronics and Mechanical Systems (CTEMS) |chapter=A Comparative Analysis of Gradient Descent-Based Optimization Algorithms on Convolutional Neural Networks |date=December 2018|chapter-url=https://ieeexplore.ieee.org/document/8769211|pages=92–99|doi=10.1109/CTEMS.2018.8769211|isbn=978-1-5386-7709-4|s2cid=198931032}}</ref>

== Usage and extensions ==
=== TensorFlow ===
TensorFlow serves as a core platform and library for machine learning. TensorFlow's APIs use [[Keras]] to allow users to make their own machine learning models.<ref>{{Cite web|title=TensorFlow Core {{!}} Machine Learning for Beginners and Experts|url=https://www.tensorflow.org/overview|access-date=2021-11-04|website=TensorFlow|language=en}}</ref> In addition to building and training their model, TensorFlow can also help load the data to train the model, and deploy it using TensorFlow Serving.<ref name=":1">{{Cite web|title=Introduction to TensorFlow|url=https://www.tensorflow.org/learn|access-date=2021-10-28|website=TensorFlow|language=en}}</ref>

TensorFlow provides a stable [[Python (programming language)|Python]] API,<ref>{{Cite web|title=All symbols in TensorFlow 2 {{!}} TensorFlow Core v2.7.0|url=https://www.tensorflow.org/api_docs/python/tf/all_symbols|access-date=2021-11-06|website=TensorFlow|language=en}}</ref> as well as APIs without backwards compatibility guarantee for [[JavaScript|Javascript]],<ref>{{Cite web|title=TensorFlow.js|url=https://js.tensorflow.org/|access-date=2021-11-06|website=js.tensorflow.org}}</ref> [[C++]],<ref>{{Cite web|title=TensorFlow C++ API Reference {{!}} TensorFlow Core v2.7.0|url=https://www.tensorflow.org/api_docs/cc|access-date=2021-11-06|website=TensorFlow|language=en}}</ref> and [[Java (programming language)|Java]].<ref>{{Cite web|title=org.tensorflow {{!}} Java|url=https://www.tensorflow.org/api_docs/java/org/tensorflow/package-summary|access-date=2021-11-06|website=TensorFlow|language=en}}</ref><ref name=":13" /> Third-party language binding packages are also available for [[C Sharp (programming language)|C#]],<ref>{{cite web|last=Icaza|first=Miguel de|date=2018-02-17|title=TensorFlowSharp: TensorFlow API for .NET languages|website=[[GitHub]]|url=https://github.com/migueldeicaza/TensorFlowSharp|access-date=2018-02-18}}</ref><ref>{{cite web|last=Chen|first=Haiping|date=2018-12-11|title=TensorFlow.NET: .NET Standard bindings for TensorFlow|website=[[GitHub]]|url=https://github.com/SciSharp/TensorFlow.NET|access-date=2018-12-11}}</ref> [[Haskell (programming language)|Haskell]],<ref>{{cite web|date=2018-02-17|title=haskell: Haskell bindings for TensorFlow|url=https://github.com/tensorflow/haskell|access-date=2018-02-18|publisher=tensorflow}}</ref> [[Julia (programming language)|Julia]],<ref>{{cite web|last=Malmaud|first=Jon|date=2019-08-12|title=A Julia wrapper for TensorFlow|website=[[GitHub]]|url=https://github.com/malmaud/TensorFlow.jl|access-date=2019-08-14|quote=operations like sin, * (matrix multiplication), .* (element-wise multiplication), etc [..]. Compare to Python, which requires learning specialized namespaced functions like tf.matmul.}}</ref> [[Matlab|MATLAB]],<ref>{{cite web|date=2019-11-03|title=A MATLAB wrapper for TensorFlow Core|website=[[GitHub]]|url=https://github.com/asteinh/tensorflow.m|access-date=2020-02-13}}</ref>  [[Object Pascal]],<ref>{{cite web|date=2023-01-19|title=Use TensorFlow from Pascal (FreePascal, Lazarus, etc.)|website=[[GitHub]]|url=https://github.com/zsoltszakaly/tensorflowforpascal|access-date=2023-01-20}}</ref> [[R (software)|R]],<ref>{{cite web|date=2018-02-17|title=tensorflow: TensorFlow for R|url=https://github.com/rstudio/tensorflow|access-date=2018-02-18|publisher=RStudio}}</ref> [[Scala (programming language)|Scala]],<ref>{{cite web|last=Platanios|first=Anthony|date=2018-02-17|title=tensorflow_scala: TensorFlow API for the Scala Programming Language|website=[[GitHub]]|url=https://github.com/eaplatanios/tensorflow_scala|access-date=2018-02-18}}</ref> [[Rust (programming language)|Rust]],<ref>{{cite web|date=2018-02-17|title=rust: Rust language bindings for TensorFlow|url=https://github.com/tensorflow/rust|access-date=2018-02-18|publisher=tensorflow}}</ref> [[OCaml]],<ref>{{cite web|last=Mazare|first=Laurent|date=2018-02-16|title=tensorflow-ocaml: OCaml bindings for TensorFlow|website=[[GitHub]]|url=https://github.com/LaurentMazare/tensorflow-ocaml|access-date=2018-02-18}}</ref> and [[Crystal (programming language)|Crystal]].<ref>{{cite web|title=fazibear/tensorflow.cr|url=https://github.com/fazibear/tensorflow.cr|access-date=2018-10-10|website=GitHub|language=en}}</ref> Bindings that are now archived and unsupported include [[Go (programming language)|Go]]<ref>{{Cite web|title=tensorflow package - github.com/tensorflow/tensorflow/tensorflow/go - pkg.go.dev|url=https://pkg.go.dev/github.com/tensorflow/tensorflow/tensorflow/go|access-date=2021-11-06|website=pkg.go.dev}}</ref> and [[Swift (programming language)|Swift]].<ref>{{Cite web|title=Swift for TensorFlow (In Archive Mode)|url=https://www.tensorflow.org/swift/guide/overview|access-date=2021-11-06|website=TensorFlow|language=en}}</ref>

=== TensorFlow.js ===
TensorFlow also has a library for machine learning in JavaScript. Using the provided JavaScript APIs, TensorFlow.js allows users to use either Tensorflow.js models or converted models from TensorFlow or TFLite, retrain the given models, and run on the web.<ref name=":1" /><ref>{{Cite web|title=TensorFlow.js {{!}} Machine Learning for JavaScript Developers|url=https://www.tensorflow.org/js|access-date=2021-10-28|website=TensorFlow|language=en}}</ref>

=== TFLite ===
TensorFlow Lite has APIs for mobile apps or embedded devices to generate and deploy TensorFlow models.<ref>{{Cite web|title=TensorFlow Lite {{!}} ML for Mobile and Edge Devices|url=https://www.tensorflow.org/lite|access-date=2021-11-01|website=TensorFlow|language=en}}</ref> These models are compressed and optimized in order to be more efficient and have a higher performance on smaller capacity devices.<ref name=":14">{{Cite web|title=TensorFlow Lite|url=https://www.tensorflow.org/lite/guide|access-date=2021-11-01|website=TensorFlow|language=en}}</ref>

TensorFlow Lite uses [[FlatBuffers]] as the data serialization format for network models, eschewing the [[Protocol Buffers]] format used by standard TensorFlow models.<ref name=":14" />

=== TFX ===
TensorFlow Extended (abbrev. TFX) provides numerous components to perform all the operations needed for end-to-end production.<ref name=":2">{{Cite web|title=TensorFlow Extended (TFX) {{!}} ML Production Pipelines|url=https://www.tensorflow.org/tfx|access-date=2021-11-02|website=TensorFlow|language=en}}</ref> Components include loading, validating, and transforming data, tuning, training, and evaluating the machine learning model, and pushing the model itself into production.<ref name=":1" /><ref name=":2" />

=== Integrations ===

==== Numpy ====
Numpy is one of the most popular Python data libraries, and TensorFlow offers integration and compatibility with its data structures.<ref name=":15">{{Cite web|title=Customization basics: tensors and operations {{!}} TensorFlow Core|url=https://www.tensorflow.org/tutorials/customization/basics|access-date=2021-11-06|website=TensorFlow|language=en}}</ref> Numpy NDarrays, the library's native datatype, are automatically converted to TensorFlow Tensors in TF operations; the same is also true vice versa.<ref name=":15" /> This allows for the two libraries to work in unison without requiring the user to write explicit data conversions. Moreover, the integration extends to memory optimization by having TF Tensors share the underlying memory representations of Numpy NDarrays whenever possible.<ref name=":15" />

=== Extensions ===
TensorFlow also offers a variety of libraries and extensions to advance and extend the models and methods used.<ref name=":33">{{Cite web|title=Guide {{!}} TensorFlow Core|url=https://www.tensorflow.org/guide|access-date=2021-11-04|website=TensorFlow|language=en}}</ref> For example, TensorFlow Recommenders and TensorFlow Graphics are libraries for their respective functionalities in recommendation systems and graphics, TensorFlow Federated provides a framework for decentralized data, and TensorFlow Cloud allows users to directly interact with Google Cloud to integrate their local code to Google Cloud.<ref name=":43">{{Cite web|title=Libraries & extensions|url=https://www.tensorflow.org/resources/libraries-extensions|access-date=2021-11-04|website=TensorFlow|language=en}}</ref> Other add-ons, libraries, and frameworks include TensorFlow Model Optimization, TensorFlow Probability, TensorFlow Quantum, and TensorFlow Decision Forests.<ref name=":33" /><ref name=":43" />

==== Google Colab ====
Google also released Colaboratory, a TensorFlow Jupyter notebook environment that does not require any setup.<ref>{{cite web|title=Colaboratory – Google|url=https://research.google.com/colaboratory/faq.html|access-date=2018-11-10|website=research.google.com|language=en}}</ref> It runs on Google Cloud and allows users free access to GPUs and the ability to store and share notebooks on Google Drive.<ref>{{Cite web|title=Google Colaboratory|url=https://colab.research.google.com/|access-date=2021-11-06|website=colab.research.google.com|language=en}}</ref>

==== Google JAX ====
{{main|Google JAX}}
[[Google JAX]] is a machine learning framework for transforming numerical functions.<ref name=":jax">{{Citation |title=JAX: Autograd and XLA |date=2022-06-18 |url=https://github.com/google/jax |archive-url=https://web.archive.org/web/20220618205214/https://github.com/google/jax |publisher=Google |bibcode=2021ascl.soft11002B |access-date=2022-06-18 |archive-date=2022-06-18|last1=Bradbury |first1=James |last2=Frostig |first2=Roy |last3=Hawkins |first3=Peter |last4=Johnson |first4=Matthew James |last5=Leary |first5=Chris |last6=MacLaurin |first6=Dougal |last7=Necula |first7=George |last8=Paszke |first8=Adam |last9=Vanderplas |first9=Jake |last10=Wanderman-Milne |first10=Skye |last11=Zhang |first11=Qiao |journal=Astrophysics Source Code Library }}</ref><ref>{{Cite web |title=Using JAX to accelerate our research |url=https://www.deepmind.com/blog/using-jax-to-accelerate-our-research |url-status=live |archive-url=https://web.archive.org/web/20220618205746/https://www.deepmind.com/blog/using-jax-to-accelerate-our-research |archive-date=2022-06-18 |access-date=2022-06-18 |website=www.deepmind.com |language=en}}</ref><ref>{{Cite web |date=2022-04-25 |title=Why is Google's JAX so popular? |url=https://analyticsindiamag.com/why-is-googles-jax-so-popular/ |url-status=live |archive-url=https://web.archive.org/web/20220618210503/https://analyticsindiamag.com/why-is-googles-jax-so-popular/ |archive-date=2022-06-18 |access-date=2022-06-18 |website=Analytics India Magazine |language=en-US}}</ref> It is described as bringing together a modified version of [https://github.com/HIPS/autograd autograd] (automatic obtaining of the gradient function through differentiation of a function) and TensorFlow's [https://www.tensorflow.org/xla XLA] (Accelerated Linear Algebra). It is designed to follow the structure and workflow of [[NumPy]] as closely as possible and works with TensorFlow as well as other frameworks such as [[PyTorch]]. The primary functions of JAX are:<ref name=":jax" />

# grad: automatic differentiation
# jit: compilation
# vmap: auto-vectorization
# pmap: SPMD programming

== Applications ==

=== Medical ===
[[GE Healthcare]] used TensorFlow to increase the speed and accuracy of [[Magnetic resonance imaging|MRIs]] in identifying specific body parts.<ref>{{Cite web|title=Intelligent Scanning Using Deep Learning for MRI|url=https://blog.tensorflow.org/2019/03/intelligent-scanning-using-deep-learning.html|access-date=2021-11-04|language=en}}</ref> Google used TensorFlow to create DermAssist, a free mobile application that allows users to take pictures of their skin and identify potential health complications.<ref name=":6">{{Cite web|title=Case Studies and Mentions|url=https://www.tensorflow.org/about/case-studies|access-date=2021-11-04|website=TensorFlow|language=en}}</ref> [[Sinovation Ventures]] used TensorFlow to identify and classify eye diseases from [[optical coherence tomography]] (OCT) scans.<ref name=":6" />

=== Social media ===
[[Twitter]] implemented TensorFlow to rank tweets by importance for a given user, and changed their platform to show tweets in order of this ranking.<ref name=":7">{{Cite web|title=Ranking Tweets with TensorFlow|url=https://blog.tensorflow.org/2019/03/ranking-tweets-with-tensorflow.html|access-date=2021-11-04|language=en}}</ref> Previously, tweets were simply shown in reverse chronological order.<ref name=":7" /> The photo sharing app [[VSCO]] used TensorFlow to help suggest custom filters for photos.<ref name=":6" />

=== Search Engine ===
[[Google]] officially released [[RankBrain]] on October 26, 2015, backed by TensorFlow.<ref>{{Cite web|last1=3.5kshares|last2=72kreads|title=A Complete Guide to the Google RankBrain Algorithm|url=https://www.searchenginejournal.com/google-algorithm-history/rankbrain/|access-date=2021-11-06|website=Search Engine Journal|date=September 2, 2020 |language=en}}</ref>

=== Education ===
InSpace, a virtual learning platform, used TensorFlow to filter out toxic chat messages in classrooms.<ref>{{Cite web|title=InSpace: A new video conferencing platform that uses TensorFlow.js for toxicity filters in chat|url=https://blog.tensorflow.org/2020/12/inspace-new-video-conferencing-platform-uses-tensorflowjs-for-toxicity-filters-in-chat.html|access-date=2021-11-04|language=en}}</ref> Liulishuo, an online English learning platform, utilized TensorFlow to create an adaptive curriculum for each student.<ref name=":8">{{Cite web|last=Xulin|title=流利说基于 TensorFlow 的自适应系统实践|url=http://mp.weixin.qq.com/s?__biz=MzI0NjIzNDkwOA==&mid=2247484035&idx=1&sn=85fa0decac95e359435f68c50865ac0b&chksm=e94328f0de34a1e665e0d809b938efb34f0aa6034391891246fc223b7782ac3bfd6ddd588aa2#rd|access-date=2021-11-04|website=Weixin Official Accounts Platform}}</ref> TensorFlow was used to accurately assess a student's current abilities, and also helped decide the best future content to show based on those capabilities.<ref name=":8" />

=== Retail ===
The e-commerce platform [[Carousell (company)|Carousell]] used TensorFlow to provide personalized recommendations for customers.<ref name=":6" /> The cosmetics company ModiFace used TensorFlow to create an augmented reality experience for customers to test various shades of make-up on their face.<ref>{{Cite web|title=How Modiface utilized TensorFlow.js in production for AR makeup try on in the browser|url=https://blog.tensorflow.org/2020/02/how-modiface-utilized-tensorflowjs-in-ar-makeup-in-browser.html|access-date=2021-11-04|language=en}}</ref>

{{multiple image
| footer = 2016 comparison of original photo (left) and with TensorFlow ''neural style'' applied (right)
| width = 150
| image1 = TorontoMusicGarden10.jpg
| image2 = TorontoMusicGarden10-TensorFlow2.jpg
}}

=== Research ===
TensorFlow is the foundation for the automated [[image captioning|image-captioning]] software [[DeepDream]].<ref name="Byrne">{{cite web |last1 = Byrne |first1 = Michael |title = Google Offers Up Its Entire Machine Learning Library as Open-Source Software |url = https://www.vice.com/en/article/8q8avx/google-offers-up-its-entire-machine-learning-library-as-open-source |website = Vice |access-date = November 11, 2015 |date = November 11, 2015 }}</ref>

{{-}}

==See also==
{{Portal|Free and open-source software
}}
* [[Comparison of deep learning software]]
* [[Differentiable programming]]
* [[Keras]]

== Bibliography ==
{{Refbegin}}
*{{Cite book
| first1    = Laurence
| last1     = Moroney
| date      = October 1, 2020
| title     = AI and Machine Learning for Coders
| edition   = 1st
| publisher = [[O'Reilly Media]]
| page      = 365
| isbn      = 9781492078197
| url       = https://www.oreilly.com/library/view/ai-and-machine/9781492078180/
}}
*{{Cite book
| first1    = Aurélien
| last1     = Géron
| date      = October 15, 2019
| title     = Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow
| edition   = 2nd
| publisher = [[O'Reilly Media]]
| page      = 856
| isbn      = 9781492032632
| url       = https://www.oreilly.com/library/view/hands-on-machine-learning/9781492032632/
}}
*{{Cite book
| first1    = Bharath
| last1     = Ramsundar
| first2    = Reza Bosagh
| last2     = Zadeh
| date      = March 23, 2018
| title     = TensorFlow for Deep Learning
| edition   = 1st
| publisher = [[O'Reilly Media]]
| page      = 256
| isbn      = 9781491980446
| url       = https://www.oreilly.com/library/view/tensorflow-for-deep/9781491980446/
}}
*{{Cite book
| first1    = Tom
| last1     = Hope
| first2    = Yehezkel S.
| last2     = Resheff
| first3    = Itay
| last3     = Lieder
| date      = August 27, 2017
| title     = Learning TensorFlow: A Guide to Building Deep Learning Systems
| edition   = 1st
| publisher = [[O'Reilly Media]]
| page      = 242
| isbn      = 9781491978504
| url       = https://www.oreilly.com/library/view/learning-tensorflow/9781491978504/
}}
*{{Cite book
| first1    = Nishant
| last1     = Shukla
| date      = February 12, 2018
| title     = Machine Learning with TensorFlow
| edition   = 1st
| publisher = [[Manning Publications]]
| page     = 272
| isbn      = 9781617293870
}}

{{Refend}}

== External links ==
* {{Official website|https://www.tensorflow.org}}
*[https://www.oreilly.com/library/view/learning-tensorflowjs/9781492090786/ Learning TensorFlow.js Book (ENG)]

{{Deep Learning Software}}
{{Google FOSS}}
{{Differentiable computing}}

== References ==
{{Reflist}}

[[Category:Deep learning software]]
[[Category:Free software programmed in C++]]
[[Category:Free software programmed in Python]]
[[Category:Free statistical software]]
[[Category:Google software]]
[[Category:Open-source artificial intelligence]]
[[Category:Python (programming language) scientific libraries]]
[[Category:Software using the Apache license]]
[[Category:2015 software]]