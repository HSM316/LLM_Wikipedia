An '''adaptive neuro-fuzzy inference system''' or '''adaptive network-based fuzzy inference system''' ('''ANFIS''') is a kind of [[artificial neural network]] that is based on [[Fuzzy logic#Takagi–Sugeno–Kang (TSK)|Takagi–Sugeno fuzzy inference system]]. The technique was developed in the early 1990s.<ref>{{cite conference |last=Jang |first=Jyh-Shing R |title=Fuzzy Modeling Using Generalized Neural Networks and Kalman Filter Algorithm |year=1991|conference=Proceedings of the 9th National Conference on Artificial Intelligence, Anaheim, CA, USA, July 14–19 |volume=2 |pages=762–767 |url=http://www.aaai.org/Papers/AAAI/1991/AAAI91-119.pdf }}</ref><ref>{{cite journal |last=Jang |first=J.-S.R. |s2cid=14345934 |year=1993 |title=ANFIS: adaptive-network-based fuzzy inference system |journal=IEEE Transactions on Systems, Man, and Cybernetics |volume=23 |issue=3 |pages=665–685 |doi=10.1109/21.256541 }}</ref> Since it integrates both neural networks and [[fuzzy logic]] principles, it has potential to capture the benefits of both in a single [[:wikt:framework|framework]].

Its inference system corresponds to a set of fuzzy [[Conditional (programming)|IF–THEN rules]] that have learning capability to approximate [[nonlinear function]]s.<ref>{{Citation |chapter=Adaptation of Fuzzy Inference System Using Neural Learning |title=Fuzzy Systems Engineering: Theory and Practice |first=A. |last=Abraham |year=2005 |editor-first=Nadia |editor1-last=Nedjah |editor2-first=Luiza |editor2-last=de Macedo Mourelle |series=Studies in Fuzziness and Soft Computing |volume=181 |publisher=Springer Verlag |location=Germany |doi=10.1007/11339366_3 |pages=53–83 |isbn=978-3-540-25322-8 |citeseerx=10.1.1.161.6135 }}</ref> Hence, ANFIS is considered to be a [[universal estimator]].<ref>Jang, Sun, Mizutani (1997) – Neuro-Fuzzy and Soft Computing – Prentice Hall, pp 335–368, {{ISBN|0-13-261066-3}}</ref> For using the ANFIS in a more efficient and optimal way, one can use the best parameters obtained by [[genetic algorithm]].<ref>{{cite journal|last=Tahmasebi|first=P. |title=A hybrid neural networks-fuzzy logic-genetic algorithm for grade estimation |year=2012 |journal=Computers & Geosciences |volume=42 |pages=18–27 |doi=10.1016/j.cageo.2012.02.004 |pmid=25540468 |pmc=4268588 |bibcode=2012CG.....42...18T }}</ref><ref>{{cite journal|last=Tahmasebi|first=P. |title=Comparison of optimized neural network with fuzzy logic for ore grade estimation |year=2010 |journal=Australian Journal of Basic and Applied Sciences |volume=4 |pages=764–772 |url=https://www.researchgate.net/publication/266881168 }}</ref> It has uses in intelligent situational aware [[energy management system]].<ref>{{Cite journal |doi = 10.1109/JSTSP.2018.2848624|bibcode = 2018ISTSP..12..806K|title = Intelligent Soft Computing-Based Security Control for Energy Management Architecture of Hybrid Emergency Power System for More-Electric {{sic|nolink=y|Aircrafts}}|journal = IEEE Journal of Selected Topics in Signal Processing|volume = 12|issue = 4|pages = 806|last1 = Kamal|first1 = Mohasinina Binte|last2 = Mendis|first2 = Gihan J.|last3 = Wei|first3 = Jin|year = 2018|s2cid = 51908378}}</ref>

==ANFIS architecture==
It is possible to identify two parts in the network structure, namely premise and consequence parts. In more details, the architecture is composed by five layers. The first layer takes the input values and determines the [[Membership function (mathematics)|membership functions]] belonging to them. It is commonly called fuzzification layer. The membership degrees of each function are computed by using the premise parameter set, namely {a,b,c}. The second layer is responsible of generating the firing strengths for the rules. Due to its task, the second layer is denoted as "rule layer". The role of the third layer is to normalize the computed firing strengths, by dividing each value for the total firing strength. The fourth layer takes as input the normalized values and the consequence parameter set {p,q,r}. The values returned by this layer are the defuzzificated ones and those values are passed to the last layer to return the final output.<ref name="KarabogaKaya2018">{{cite journal|last1=Karaboga|first1=Dervis|last2=Kaya|first2=Ebubekir|title=Adaptive network based fuzzy inference system (ANFIS) training approaches: a comprehensive survey|journal=Artificial Intelligence Review|volume=52|issue=4|pages=2263–2293|year=2018|issn=0269-2821|doi=10.1007/s10462-017-9610-2|s2cid=40548050}}</ref>

===Fuzzification layer===
The first layer of an ANFIS network describes the difference to a vanilla neural network. Neural networks in general are operating with a [[data pre-processing]] step, in which the [[Feature (machine learning)|features]] are converted into normalized values between 0 and 1. An ANFIS neural network doesn't need a [[sigmoid function]], but it's doing the preprocessing step by converting numeric values into fuzzy values.<ref>{{cite journal |doi=10.1109/72.159060 |pmid=18276470 |year=1992 |publisher=Institute of Electrical and Electronics Engineers (IEEE) |volume=3 |number=5 |pages=714–723 |author=J.-S.R. Jang |title=Self-learning fuzzy controllers based on temporal backpropagation |journal=IEEE Transactions on Neural Networks }}</ref>

Here is an example: Suppose, the network gets as input the distance between two points in the 2d space. The distance is measured in pixels and it can have values from 0 up to 500 pixels. Converting the numerical values into [[Fuzzy number]]s is done with the membership function which consists of [[T-norm fuzzy logics|semantic descriptions]] like near, middle and far.<ref>{{cite journal |doi=10.1016/j.pisc.2016.04.094 |year=2016 |publisher=Elsevier BV |volume=8 |pages=421–423 |author=Anish Pandey and Saroj Kumar and Krishna Kant Pandey and Dayal R. Parhi |title=Mobile robot navigation in unknown static environments using ANFIS controller |journal=Perspectives in Science |bibcode=2016PerSc...8..421P |doi-access=free }}</ref> Each possible linguistic value is given by an individual [[Artificial neuron|neuron]]. The neuron “near” fires with a value from 0 until 1, if the distance is located within the category "near". While the neuron “middle” fires, if the distance in that category. The input value “distance in pixels” is split into three different neurons for near, middle and far.

==References==
{{reflist}}

[[Category:Fuzzy logic]]
[[Category:Artificial neural networks]]