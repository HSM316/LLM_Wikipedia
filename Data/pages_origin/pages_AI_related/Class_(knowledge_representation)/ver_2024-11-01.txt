{{broader|Ontology components}}

In [[Knowledge representation and reasoning|knowledge representation]], a '''class''' is a collection of individuals or individuals objects.<ref name="DLs">{{cite conference|title=Description Logics: Foundations for Class-based Knowledge Representation|author1=Diego Calvanese|author2=Giuseppe De Giacomo|author3=Maurizio Lenzerini|conference=[[Logic in Computer Science]]|year=2002|citeseerx=10.1.1.177.2787}}</ref> A class can be defined either by [[Extensional definition|extension]] (specifying members), or by [[Intensional definition|intension]] (specifying conditions), using what is called in some ontology languages like [[Web Ontology Language|OWL]]. According to the [[typeâ€“token distinction]], the ontology is divided into individuals, who are real worlds objects, or events, and types, or classes, who are sets of real world objects. Class expressions or definitions gives the properties that the individuals must fulfill to be members of the class. Individuals that fulfill the property are called [[Instance (computer science)|Instances]].

== Examples ==
Some examples of classes:<ref>Note that the names given to the classes mentioned here are entirely a matter of convention.</ref>
* ''Person'', the class of all people, or the abstract object that can be described by the criteria for being a person.
* ''Vehicle'', the class of all vehicles, or the abstract object that can be described by the criteria for being a vehicle.
* ''Car'', the class of all cars, or the abstract object that can be described by the criteria for being a car.
* ''Class'', representing the class of all classes, or the abstract object that can be described by the criteria for being a class.
* ''Thing'', representing the class of all things, or the abstract object that can be described by the criteria for being a thing (and not nothing).

== Definition ==
Classes&nbsp;&ndash; concepts that are also called ''type'', ''sort'', ''category'', and ''kind''&nbsp;&ndash; can be defined as an extension or an intension. According to an extensional definition, they are abstract groups, sets, or collections of objects. According to an intensional definition, they are abstract objects that are defined by values of aspects that are constraints for being member of the class. The first definition of class results in ontologies in which a class is a subclass of collection. The second definition of class results in ontologies in which collections and classes are more fundamentally different. Classes may classify individuals, other classes, or a combination of both. 

===Extensional or intensional definitions===
The classes of an ontology may be [[extensional]] or [[intension]]al in nature. A class is extensional if and only if it is characterized solely by its membership. More precisely, a class C is extensional if and only if for any class C', if C' has exactly the same members as C, then C and C' are identical. If a class does not satisfy this condition, then it is intensional. While extensional classes are more well-behaved and well understood mathematically, as well as less problematic philosophically, they do not permit the fine grained distinctions that ontologies often need to make. For example, an ontology may want to distinguish between the class of all creatures with a kidney and the class of all creatures with a heart, even if these classes happen to have exactly the same members. In most [[Upper ontology|upper ontologies]], the classes are defined intensionally. Intensionally defined classes usually have necessary conditions associated with membership in each class. Some classes may also have sufficient conditions, and in those cases the combination of necessary and sufficient conditions make that class a fully ''defined'' class.

== Instantiation ==
The instantiation [[relation (mathematics)|relationship]] is a relation between objects and classes. We say that an object O, say ''Harry the eagle'' is an instance of a class, say ''Eagle''. ''Harry the eagle'' has all the properties that we can attribute to an eagle, for example his parents were eagles, he is a bird, he is a meat eater and so on. It is a special kind of [[is a]] relationship. Its noted [[Concept assertion]] (<math> : </math>) in [[Description logic]]s, a family of logic based on classes, class assertion <ref name="owlclass">{{cite web|url=http://www.w3.org/TR/owl2-syntax/#Class_Assertions|title=owl2 syntax}}</ref>

== Relationships ==
Ontologies vary on whether classes can contain other classes, whether a class can belong to itself, whether there is a universal class (that is, a class containing everything), etc. Sometimes restrictions along these lines are made in order to avoid certain well-known [[paradox]]es.

=== Subsumption and subclassing ===
Classes can [[is a|subsume]] each other. We say usually that if <code>A</code> and <code>B</code> are classes, and all <code>A</code> instances are also <code>B</code> instances, then B subsumes A, or A is a subclass of B, for example in the OWL Language it is called 'subclassof'.<ref name="owlclass"/>

[[File:OntologyBronco-Plain-SVG.svg|A partial ontology; The class ''Car'' has as subsumed classes ''2-Wheel Drive Car'' and ''4-Wheel Drive Car''|alt=|thumb]]

Importantly, a class can subsume or be subsumed by other classes; a class subsumed by another is called a ''subclass'' (or ''subtype'') of the subsuming class (or ''supertype''). For example, ''Vehicle'' subsumes ''Car'', since (necessarily) anything that is a member of the latter class is a member of the former. The subsumption relation is used to create a hierarchy of classes, typically with a maximally general class like ''Anything'' at the top, and very specific classes like ''2002 Ford Explorer'' at the bottom. The critically important consequence of the subsumption relation is the inheritance of properties from the parent (subsuming) class to the child (subsumed) class. Thus, anything that is necessarily true of a parent class is also necessarily true of all of its subsumed child classes. In some ontologies, a class is only allowed to have one parent (''single inheritance''), but in most ontologies, classes are allowed to have any number of parents (''multiple inheritance''), and in the latter case all necessary properties of each parent are inherited by the subsumed child class. Thus a particular class of animal (''HouseCat'') may be a child of the class ''Cat'' and also a child of the class ''Pet''.

=== Partition ===
A ''partition'' is a set of related classes and associated rules that allow objects to be classified by the appropriate subclass. The rules correspond with the aspect values that distinguish the subclasses from the superclasses. For example, to the right is the partial diagram of an ontology that has a partition of the ''Car'' class into the classes ''2-Wheel Drive Car'' and ''4-Wheel Drive Car''. The partition rule (or subsumption rule) determines if a particular car is classified by the ''2-Wheel Drive Car'' or the ''4-Wheel Drive Car'' class.

If the partition rule(s) guarantee that a single ''Car'' cannot be in both classes, then the partition is called a disjoint partition. If the partition rules ensure that every concrete object in the super-class is an instance of at least one of the partition classes, then the partition is called an exhaustive partition.

== See also ==
* [[Metaclass (Semantic Web)]]
* [[Ontology (information science)|Ontology]]
* [[Ontology components]]
* [[Description logic]]
* [[Type-token distinction]]

==References==
<references/>

[[Category:Knowledge representation]]

{{Information-science-stub}}