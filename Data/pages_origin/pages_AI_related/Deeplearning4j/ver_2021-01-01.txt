{{cleanup-PR|1=article|date=November 2017}}
{{notability|date=July 2020}}
{{Infobox software
| name                   = Eclipse Deeplearning4j
| logo                   = 
| screenshot             = 
| caption                =
| collapsible            =
| author                 = Alex D. Black, Adam Gibson, Vyacheslav Kokorin, Josh Patterson
| developer              = [https://github.com/eclipse/deeplearning4j/graphs/contributors Various]
| released               = <!-- {{Start date and age|YYYY|MM|DD|df=yes}} -->
| latest release version = 1.0.0-beta6
| latest release date    = {{Start date and age|2019|9|10|df=yes}}
| latest preview version = 
| latest preview date    = <!-- {{Start date and age|YYYY|MM|DD|df=yes}} -->
| programming language   = [[Java (programming language)|Java]], [[CUDA]], [[C (programming language)|C]], [[C++]], 
| operating system       = [[Linux]], [[macOS]], [[Microsoft Windows|Windows]], [[Android (operating system)|Android]], [[iOS]]
| platform               = [[Cross-platform]]
| size                   =
| language               = English
| status                 = Active
| genre                  = [[Natural language processing]], [[deep learning]], [[machine vision]], [[artificial intelligence]]
| license                = [[Apache License 2.0]]
}}

{{machine learning bar}}
Eclipse '''Deeplearning4j''' is the [[Comparison of deep-learning software|only]] [[deep learning]] programming [[Library (computing)|library]] written in [[Java (programming language)|Java]] for the [[Java virtual machine]] (JVM).<ref name="wired">{{cite magazine|first=Cade|last=Metz|title=The Mission to Bring Google's AI to the Rest of the World|magazine=[[Wired.com]]|date=2014-06-02|url=https://www.wired.com/2014/06/skymind-deep-learning/|accessdate=2014-06-28}}</ref><ref>{{cite web|url=http://www.businessweek.com/articles/2014-06-03/teaching-smaller-companies-how-to-probe-deep-learning-on-their-own|title=Deep Learning for (Some of) the People|last=Vance|first=Ashlee|work=[[Bloomberg Businessweek]]|date=2014-06-03|accessdate=2014-06-28}}</ref> It is a [[Software framework|framework]] with wide support for deep learning algorithms.<ref>{{cite web|url=https://venturebeat.com/2015/11/14/deep-learning-frameworks/|title=Want an open-source deep learning framework? Take your pick|last=Novet|first=Jordan|work=[[VentureBeat]]|date=2015-11-14|accessdate=2015-11-24}}</ref> Deeplearning4j includes implementations of the [[restricted Boltzmann machine]], [[deep belief net]], deep autoencoder, stacked denoising autoencoder and [[Recursive neural network#Tensor|recursive neural tensor network]], [[word2vec]], doc2vec, and [[GloVe (machine learning)|GloVe]]. These algorithms all include [[Distributed computing|distributed]] [[Parallel computing|parallel]] versions that integrate with [[Apache Hadoop]] and [[Apache Spark|Spark]].<ref>{{cite web|url=https://www.youtube.com/watch?v=LCsc1hFuNac|title=Adam Gibson, DeepLearning4j on Spark and Data Science on JVM with nd4j, SF Spark @Galvanize 20150212 |last=TV|first=Functional|work=SF Spark Meetup|date=2015-02-12|accessdate=2015-03-01}}</ref>

Deeplearning4j is [[open-source software]] released under [[Apache License]] 2.0,<ref>{{cite web|title=Github Repository|date=April 2020|url=https://github.com/agibsonccc/java-deeplearning}}</ref> developed mainly by a [[machine learning]] group headquartered in [[San Francisco]].<ref name="deeplearning4j.org">{{cite web|url=http://deeplearning4j.org/|title=deeplearning4j.org}}</ref> It is supported commercially by the startup Skymind, which bundles DL4J, [[TensorFlow]], [[Keras]] and other deep learning libraries in an enterprise distribution called the Skymind Intelligence Layer.<ref>{{cite web|title=Skymind Intelligence Layer Community Edition|url=https://skymind.ai/quickstart|access-date=2017-11-02|archive-url=https://web.archive.org/web/20171107015537/https://skymind.ai/quickstart|archive-date=2017-11-07|url-status=dead}}</ref> Deeplearning4j was contributed to the [[Eclipse Foundation]] in October 2017.<ref>{{cite web|title=Eclipse Deeplearning4j Project Page|date=22 June 2017|url=https://projects.eclipse.org/proposals/deeplearning4j}}</ref><ref>{{cite web|title=Skymind's Deeplearning4j, the Eclipse Foundation, and scientific computing in the JVM|url=https://jaxenter.com/skymind-deeplearning4j-eclipse-138872.html|work=Jaxenter|date=13 November 2017|accessdate=2017-11-15}}</ref>

==Introduction==
Deeplearning4j relies on the widely used programming language [[Java (programming language)|Java]], though it is compatible with [[Clojure]] and includes a [[Scala (programming language)|Scala]] [[application programming interface]] (API). It is powered by its own open-source numerical computing library, [[ND4J (software)|ND4J]], and works with both [[central processing unit]]s (CPUs) and [[graphics processing unit]]s (GPUs).<ref name="om">{{cite web|first=Derrick|last=Harris|title=A startup called Skymind launches, pushing open source deep learning|work=[[GigaOM.com]]|date=2014-06-02|url=http://gigaom.com/2014/06/02/a-startup-called-skymind-launches-pushing-open-source-deep-learning/|accessdate=2014-06-29}}</ref><ref name="vb">{{cite web|first=Jordan|last=Novet|title=Skymind launches with open-source, plug-and-play deep learning features for your app|date=2014-06-02|url=https://venturebeat.com/2014/06/02/skymind-launches-with-open-source-plug-and-play-deep-learning-features-for-your-app//|accessdate=2014-06-29}}</ref>

Deeplearning4j has been used in several commercial and academic applications. The code is hosted on [[GitHub]].<ref>[https://github.com/deeplearning4j/deeplearning4j Deeplearning4j source code]</ref> A support forum is maintained on [[Gitter]].<ref>[https://gitter.im/deeplearning4j/deeplearning4j Deeplearning4j Gitter Support Channel]</ref>

The framework is composable, meaning shallow neural nets such as restricted Boltzmann machines, convolutional nets, autoencoders, and recurrent nets can be added to one another to create deep nets of varying types. It also has extensive visualization tools,<ref>[http://deeplearning4j.org/visualization Deeplearning4j Visualization Tools]</ref> and a computation graph.<ref>[http://deeplearning4j.org/compgraph Deeplearning4j Computation Graph]</ref>

==Distributed==
Training with Deeplearning4j occurs in a cluster. Neural nets are trained in parallel via iterative reduce, which works on [[Hadoop]]-YARN and on [[Apache Spark|Spark]].<ref name="deeplearning4j.org"/><ref>{{cite web|url=https://github.com/emsixteeen/IterativeReduce|title=Iterative reduce|date=15 March 2020}}</ref> Deeplearning4j also integrates with CUDA kernels to conduct pure GPU operations, and works with distributed GPUs.

==Scientific computing for the JVM==
Deeplearning4j includes an n-dimensional array class using [[ND4J (software)|ND4J]] that allows scientific computing in Java and Scala, similar to the functions that [[NumPy]] provides to [[Python (programming language)|Python]]. It's effectively based on a library for [[linear algebra]] and [[Matrix (mathematics)|matrix]] manipulation in a production environment.

==DataVec vectorization library for machine-learning==
DataVec vectorizes various file formats and data types using an [[input/output]] format system similar to Hadoop's use of MapReduce; that is, it turns various data types into columns of scalars termed [[Vector (mathematics and physics)|vectors]]. DataVec is designed to vectorize CSVs, images, sound, text, video, and time series.<ref>[http://deeplearning4j.org/datavec DataVec ETL for Machine Learning]</ref><ref>[https://www.infoq.com/articles/deep-learning-time-series-anomaly-detection Anomaly Detection for Time Series Data with Deep Learning]</ref>

==Text and NLP==
Deeplearning4j includes a [[vector space model]]ing and [[topic model]]ing toolkit, implemented in Java and integrating with parallel GPUs for performance. It is designed to handle large text sets.

Deeplearning4j includes implementations of term frequency–inverse document frequency ([[tf–idf]]), [[deep learning]], and Mikolov's word2vec algorithm,<ref>[https://code.google.com/p/word2vec/ word2vec]</ref> doc2vec, and GloVe, reimplemented and optimized in Java. It relies on [[t-distributed stochastic neighbor embedding]] (t-SNE) for word-cloud visualizations.

==Real-world use cases and integrations==
Real-world use cases for Deeplearning4j include network intrusion detection and cybersecurity, fraud detection for the financial sector,<ref>{{Cite web |url=http://www.skymind.io/finance/ |title=Archived copy |access-date=2016-02-22 |archive-url=https://web.archive.org/web/20160310082208/http://www.skymind.io/finance/ |archive-date=2016-03-10 |url-status=dead }}</ref><ref>https://skymind.ai/bsa-aml{{Dead link|date=September 2018 |bot=InternetArchiveBot |fix-attempted=yes }}</ref> anomaly detection in industries such as manufacturing, recommender systems in e-commerce and advertising,<ref>{{cite web |url=http://www.skymind.io/commerce/ |title=Archived copy |accessdate=2016-02-22 |url-status=dead |archiveurl=https://web.archive.org/web/20160310082156/http://www.skymind.io/commerce/ |archivedate=2016-03-10 }}</ref> and image recognition.<ref>https://skymind.ai/image{{Dead link|date=September 2018 |bot=InternetArchiveBot |fix-attempted=yes }}</ref> Deeplearning4j has integrated with other machine-learning platforms such as RapidMiner, Prediction.io,<ref>https://www.rapidminerchina.com/en/products/shop/product/deeplearning4j/{{Dead link|date=September 2018 |bot=InternetArchiveBot |fix-attempted=yes }}</ref> and [[Weka (machine learning)|Weka]].<ref>https://deeplearning.cms.waikato.ac.nz/</ref>

==Machine Learning Model Server==

Deeplearning4j serves machine-learning models for inference in production using the free developer edition of SKIL, the Skymind Intelligence Layer.<ref>{{Cite web |url=https://skymind.ai/products |title=Archived copy |access-date=2017-09-20 |archive-url=https://web.archive.org/web/20170921001159/https://skymind.ai/products |archive-date=2017-09-21 |url-status=dead }}</ref><ref>{{Cite web |url=https://deeplearning4j.org/modelserver |title=Archived copy |access-date=2017-09-20 |archive-url=https://web.archive.org/web/20170921001516/https://deeplearning4j.org/modelserver |archive-date=2017-09-21 |url-status=dead }}</ref> A model server serves the parametric machine-learning models that makes decisions about data. It is used for the inference stage of a machine-learning workflow, after data pipelines and model training. A model server is the tool that allows data science research to be deployed in a real-world production environment.

What a Web server is to the Internet, a model server is to AI. Where a Web server receives an HTTP request and returns data about a Web site, a model server receives data, and returns a decision or prediction about that data: e.g. sent an image, a model server might return a label for that image, identifying faces or animals in photographs.

The SKIL model server is able to import models from Python frameworks such as Tensorflow, Keras, Theano and CNTK, overcoming a major barrier in deploying deep learning models.

==Benchmarks==
Deeplearning4j is as fast as Caffe for non-trivial image recognition tasks using multiple GPUs.<ref>{{Cite web | url=https://github.com/deeplearning4j/dl4j-benchmark | title=GitHub - deeplearning4j/Dl4j-benchmark: Repo to track dl4j benchmark code | date=19 December 2019}}</ref> For programmers unfamiliar with HPC on the JVM, there are several parameters that must be adjusted to optimize neural network training time. These include setting the heap space, the garbage collection algorithm, employing off-heap memory and pre-saving data (pickling) for faster ETL.<ref>https://deeplearning4j.org/benchmark</ref> Together, these optimizations can lead to a 10x acceleration in performance with Deeplearning4j.

==API Languages: Java, Scala, Python , Clojure & Kotlin==
Deeplearning4j can be used via multiple API languages including Java, Scala, Python, Clojure and Kotlin. Its Scala API is called ScalNet.<ref>https://deeplearning4j.org/scala</ref>  Keras serves as its Python API.<ref>{{Cite web |url=https://deeplearning4j.org/keras# |title=Archived copy |access-date=2017-02-25 |archive-url=https://web.archive.org/web/20170225133010/https://deeplearning4j.org/keras# |archive-date=2017-02-25 |url-status=dead }}</ref>  And its Clojure wrapper is known as DL4CLJ.<ref>{{Cite web |url=https://deeplearning4j.org/clojure |title=Archived copy |access-date=2017-02-25 |archive-url=https://web.archive.org/web/20170225133007/https://deeplearning4j.org/clojure |archive-date=2017-02-25 |url-status=dead }}</ref> The core languages performing the large-scale mathematical operations necessary for deep learning are C, C++ and CUDA C.

==Tensorflow, Keras & Deeplearning4j==

Tensorflow, Keras and Deeplearning4j work together. Deeplearning4j can import models from Tensorflow and other Python frameworks if they have been created with Keras.<ref>{{Cite web |url=https://deeplearning4j.org/tensorflow |title=Archived copy |access-date=2017-09-07 |archive-url=https://web.archive.org/web/20170908021856/https://deeplearning4j.org/tensorflow |archive-date=2017-09-08 |url-status=dead }}</ref>

==See also==
{{Portal|Free and open-source software|Computer programming}}
* [[Comparison of deep learning software]]
* [[Artificial intelligence]]
* [[Machine learning]]
* [[Deep learning]]

==References==
{{Reflist|30em}}



{{Computer vision footer}}
{{Deep Learning Software}}

[[Category:Applied machine learning]]
[[Category:Artificial neural networks]]
[[Category:Cluster computing]]
[[Category:Data mining and machine learning software]]
[[Category:Deep learning]]
[[Category:Neural network software]]
[[Category:Free data analysis software]]
[[Category:Free science software]]
[[Category:Free software programmed in Java (programming language)]]
[[Category:Java (programming language) software]]
[[Category:Free software programmed in Scala]]
[[Category:Free statistical software]]
[[Category:Hadoop]]
[[Category:Image processing]]
[[Category:Information technology companies of the United States]]
[[Category:Java (programming language) libraries]]
[[Category:Java platform]]
[[Category:Java programming language family]]
[[Category:JVM programming languages]]
[[Category:Machine learning]]
[[Category:Natural language processing]]
[[Category:Numerical programming languages]]
[[Category:Open-source artificial intelligence]]
[[Category:Scala (programming language)]]
[[Category:Software using the Apache license]]
[[Category:Technology companies based in the San Francisco Bay Area]]