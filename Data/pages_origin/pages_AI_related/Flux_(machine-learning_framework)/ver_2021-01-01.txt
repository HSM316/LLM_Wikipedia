{{Infobox software
| name = Flux
| logo = FluxLogo.png
| author = Michael J Innes.<ref name="JOSS">{{Cite journal|title=Flux: Elegant machine learning with Julia|journal = Journal of Open Source Software|volume = 3|issue = 25|pages = 602|last=Innes|first=Michael|date=2018-05-03|language=en|doi=10.21105/joss.00602|doi-access=free}}</ref>
| latest release version = v0.10.3
| license = [[MIT License|MIT]]<ref>{{Cite web|url=https://github.com/FluxML/Flux.jl/blob/master/LICENSE.md|title=github.com/FluxML/Flux.jl/blob/master/LICENSE.md}}</ref>
| repo = {{URL|https://github.com/FluxML/Flux.jl}}
| programming language = [[Julia (programming language)|Julia]]
| genre = [[Machine learning]] [[Library (computing)|library]]
| website = https://fluxml.ai
}}

'''Flux''' is an [[Open source|open-source]] machine-learning [[AI software|software]] library and ecosystem written in [[Julia (programming language)|Julia]].<ref name="JOSS" /><ref>{{Cite web|url=https://julialang.org/blog/2018/12/ml-language-compiler|title=Building a Language and Compiler for Machine Learning|first1=Mike|last1=Innes|first2=James|last2=Bradbury|first3=Keno|last3=Fischer|first4=Dhairya|last4=Gandhi|first5=Neethu|last5=Mariya Joy|first6=Tejan|last6=Karmali|first7=Matt|last7=Kelley|first8=Avik|last8=Pal|first9=Marco|last9=Concetto Rudilosso|first10=Elliot|last10=Saba|first11=Viral|last11=Shah|first12=Deniz|last12=Yuret|website=julialang.org|access-date=2019-06-02}}</ref> Its current stable release is v0.10.3.<ref>{{Citation|title=FluxML/Flux.jl v0.10.3|date=2020-03-04|url=https://github.com/FluxML/Flux.jl/releases/tag/v0.10.3|publisher=Flux|access-date=2020-03-27}}</ref> It has a layer-stacking-based interface for simpler models, and has a strong support on interoperability with other Julia packages instead of a monolithic design.<ref>{{Cite web|url=https://juliacomputing.com/domains/ml-and-ai.html|title=Machine Learning and Artificial Intelligence|website=juliacomputing.com|access-date=2019-06-02}}</ref> For example, GPU support is implemented transparently by CuArrays.jl<ref>{{Cite web|url=https://juliacomputing.com/blog/2018/11/15/julia-ml-three-papers.html|title=Julia at NeurIPS and the Future of Machine Learning Tools|last=Gandhi|first=Dhairya|date=2018-11-15|website=juliacomputing.com|access-date=2019-06-02}}</ref> This is in contrast to some other machine learning frameworks which are implemented in other languages with Julia bindings,&nbsp;such as [[TensorFlow|TensorFlow.jl]], and thus are more limited by the functionality present in the underlying implementation, which is often in C or C++.<ref>{{Cite journal|title=TensorFlow.jl: An Idiomatic Julia Front End for TensorFlow|journal = Journal of Open Source Software|volume = 3|issue = 31|pages = 1002|date=2018-11-01|language=en|doi=10.21105/joss.01002|last1 = Malmaud|first1 = Jonathan|last2 = White|first2 = Lyndon|doi-access = free}}</ref>

Flux's focus on interoperability has enabled, for example, support for [[Neural Differential Equations]], by fusing Flux.jl and DifferentialEquations.jl into DiffEqFlux.jl.<ref>{{cite arxiv|last=Rackauckas|first=Chris|last2=Innes|first2=Mike|last3=Ma|first3=Yingbo|last4=Bettencourt|first4=Jesse|last5=White|first5=Lyndon|last6=Dixit|first6=Vaibhav|date=2019-02-06|title=DiffEqFlux.jl - A Julia Library for Neural Differential Equations|eprint=1902.02376|language=en|class=cs.LG}}</ref><ref>{{Cite web|url=https://jaxenter.com/julia-machine-learning-library-154880.html|title=Machine learning meets math: Solve differential equations with new Julia library|date=2019-01-25|website=JAXenter|language=en-US|access-date=2019-10-21|last=Schlothauer|first=Sarah}}</ref>

Flux supports recurrent and convolutional networks. It is also capable of [[differentiable programming]]<ref>{{Cite web|url=https://fluxml.ai/2019/03/05/dp-vs-rl.html|title=Flux – Reinforcement Learning vs. Differentiable Programming|website=fluxml.ai|access-date=2019-06-02}}</ref><ref>{{Cite web|url=https://fluxml.ai/2019/02/07/what-is-differentiable-programming.html|title=Flux – What Is Differentiable Programming?|website=fluxml.ai|access-date=2019-06-02}}</ref><ref>{{Cite web|url=https://www.techrepublic.com/article/julia-vs-python-which-programming-language-will-rule-machine-learning-in-2019/|title=Julia vs Python: Which programming language will rule machine learning in 2019?|last=Heath|first=Nick|date=December 6, 2018|website=TechRepublic|language=en|access-date=2019-06-03}}</ref> through its source-to-source [[automatic differentiation]] package, Zygote.jl.<ref>{{cite arxiv|last=Innes|first=Michael|date=2018-10-18|title=Don't Unroll Adjoint: Differentiating SSA-Form Programs|eprint=1810.07951|language=en|class=cs.PL}}</ref>

Julia is a popular language in machine-learning<ref name=":0">{{Cite web|url=https://www.techrepublic.com/article/github-the-top-10-programming-languages-for-machine-learning/|title=GitHub: The top 10 programming languages for machine learning|last=Heath|first=Nick|date=January 25, 2019|website=TechRepublic|language=en|access-date=2019-06-03}}</ref> and Flux.jl is its most highly regarded machine-learning repository.<ref name=":0" /> A demonstration<ref>{{cite arxiv|last=Saba|first=Elliot|last2=Fischer|first2=Keno|date=2018-10-23|title=Automatic Full Compilation of Julia Programs and ML Models to Cloud TPUs|eprint=1810.09868|language=en|class=cs.PL}}</ref> compiling Julia code to run in Google's [[Tensor processing unit]] received praise from [[Google Brain]] AI lead [[Jeff Dean (computer scientist)|Jeff Dean]].<ref>{{cite tweet |user=JeffDean |number=1054951415339192321 |date=2018-10-23 |title=Julia + TPUs = fast and easily expressible ML computations |first=Jeff |last=Dean|language=en|access-date=2019-06-02}}</ref>

Flux has been used as a framework to build neural networks that work with [[Homomorphic encryption|homomorphic encrypted]] data without ever decrypting it.<ref>{{Cite web|url=https://hub.packtpub.com/julia-computing-research-team-runs-machine-learning-model-on-encrypted-data-without-decrypting-it/|title=Julia Computing research team runs machine learning model on encrypted data without decrypting it|last=Patrawala|first=Fatema|date=2019-11-28|website=Packt Hub|language=en-US|access-date=2019-12-11}}</ref><ref>{{Cite web|url=https://juliacomputing.com/blog/2019/11/22/encrypted-machine-learning.html|title=Machine Learning on Encrypted Data Without Decrypting It|date=2019-11-22|website=juliacomputing.com|access-date=2019-12-11}}</ref> This kind of application is envisioned to be central for privacy to future [[application programming interface|API]] using machine-learning models.<ref>{{Cite web|url=https://analyticsindiamag.com/julia-computing-uses-homomorphic-encryption-for-ml-is-it-the-way-forward/|title=Julia Computing Uses Homomorphic Encryption For ML. Is It The Way Forward?|last=Yadav|first=Rohit|date=2019-12-02|website=Analytics India Magazine|language=en-US|access-date=2019-12-11}}</ref>

Flux.jl is an [[intermediate representation]] for running high level programs on [[CUDA]] hardware.<ref>{{cite arxiv |title=Relay: A High-Level IR for Deep Learning |author=Roesch, Jared and Lyubomirsky, Steven and Kirisame, Marisa and Pollock, Josh and Weber, Logan and Jiang, Ziheng and Chen, Tianqi and Moreau, Thierry and Tatlock, Zachary |eprint=1904.08368 |year=2019 }}</ref><ref>{{cite journal |doi=10.1109/tpds.2018.2872064 |year=2019 |publisher=Institute of Electrical and Electronics Engineers (IEEE) |volume=30 |number=4 |pages=827–841 |author=Tim Besard and Christophe Foket and Bjorn De Sutter |title=Effective Extensible Programming: Unleashing Julia on GPUs |journal=IEEE Transactions on Parallel and Distributed Systems |arxiv=1712.03112 }}</ref> It was the predecessor to CUDAnative.jl which is also a [[General-purpose computing on graphics processing units|GPU programming]] language.<ref>{{cite thesis |type=PhD |title=Abstractions for Programming Graphics Processors in High-Level Programming Languages |author=Besard, Tim |year=2018 |publisher=Ghent University }}</ref>

== See also ==
* [[Differentiable programming]]
* [[Comparison of deep-learning software]]

== References ==
<!-- Inline citations added to your article will automatically display here. See en.wikipedia.org/wiki/WP:REFB for instructions on how to add citations. -->
{{reflist}}

[[Category:Machine learning]]
[[Category:Free software programmed in Julia]]
[[Category:Software using the MIT license]]