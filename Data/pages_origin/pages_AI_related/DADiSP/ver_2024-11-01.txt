{{Infobox software
| name                   = DADiSP
| developer              = DSP Development Corporation
| released               = {{Start date and age|1987|df=yes}}
| latest release version = DADiSP 6.7 B02
| latest release date    = {{Start date and age|2017|1|17}}
| programming language   = [[C (programming language)|C]], [[C++]], SPL
| operating_system       = [[Microsoft Windows]]
| platform               = [[IA-32]], [[x86-64]]
| genre                  = [[List of numerical-analysis software|Technical computing]]
| license                = [[Proprietary software|Proprietary]] [[commercial software]]
| website                = {{url|https://www.dadisp.com}}
}}

{{Infobox programming language
| name                   = SPL
| paradigm               = [[multi-paradigm programming language|multi-paradigm]]: [[Imperative programming|imperative]], [[Procedural programming|procedural]], [[Object-oriented programming|object-oriented]], [[Array programming|array]]
| family                 =
| year                   = late 1990s
| designer               = Randy Race
| developer              = DSP Development Corporation
| latest release version = 6.7
| latest release date    = 2017
| typing                 = [[dynamic typing|Dynamic]], [[weak typing|weak]]
| scope                  =
| implementations        =
| dialects               =
| influenced by          = [[APL (programming language)|APL]], [[C (programming language)|C]], [[C++]]
| influenced             =
| operating_system       = [[Microsoft Windows]]
| license                =
| file_ext               = .spl
| website                =
}}

'''DADiSP''' (Data Analysis and Display, pronounced day-disp) is a [[Numerical analysis|numerical computing]] environment developed by DSP Development Corporation which allows one to display and manipulate data series, [[matrix (math)|matrices]] and [[image]]s with an interface similar to a [[spreadsheet]]. DADiSP is used in the study of [[signal processing]],<ref>{{cite web|title=Real-Time Digital Signal Processing Design Projects in an Undergraduate DSP Course and Laboratory |url=http://www.texas-instruments.com/sc/docs/general/dsp/fest99/edu_trackpm/06nahvi.pdf|author=Mahmood Nahvi|publisher=Texas Instruments DSPS Fest, 1999}}</ref> [[numerical analysis]], [[statistical]] and [[physiological]] data processing.<ref>{{cite web|title=User Interactive Software for Analysis of Human Physiological Data|url=http://www.techbriefs.com/component/content/article/1265|publisher=Nasa Tech Briefs, December 2006}}</ref>

== Interface ==

DADiSP is designed to perform technical data analysis in a [[spreadsheet]] like environment. However, unlike a typical business spreadsheet that operates on a table of cells each of which contain single [[Variable (computing)|scalar]] values, a DADiSP Worksheet consists of multiple interrelated windows where each window contains an entire [[Time series|series]] or multi-column [[Matrix (mathematics)|matrix]]. A window not only stores the data, but also displays the data in several interactive forms, including 2D graphs, XYZ plots, 3D surfaces, images and numeric tables. Like a traditional spreadsheet, the windows are linked such that a change to the data in one window automatically updates all dependent windows both numerically and graphically.<ref>{{cite web|title=DADiSP Makes Complex Data Analysis Faster and Easier |url=http://www.dadisp.com/aboutdad.htm |publisher=DSP Development Corp |access-date=March 3, 2014}}</ref><ref name="sca1">{{cite web|title=DADiSP 2002 Escape from the cell block |url=http://www.scientific-computing.com/scwjulaug03review_dadisp.html|publisher=Scientific Computing World|access-date=March 3, 2014}}</ref> Users manipulate data primarily through windows. A DADiSP window is normally referred to by the letter "W" followed by a window number, as in "W1". For example, the formula <code>W1: 1..3</code> assigns the series values {1, 2, 3} to "W1". The formula <code>W2: W1*W1</code> sets a second window to compute the square of each value in "W1" such that "W2" will contain the series {1, 4, 9}. If the values of "W1" change to {3, 5, 2, 4}, the values of "W2" automatically update to {9, 25, 4, 16}.

== Programming language ==

DADiSP includes a series based [[programming language]] called SPL (Series Processing Language)<ref>{{cite web|title=DADiSP SPL vs. MATLAB |url=http://www.dadisp.com/matlab.htm |publisher=DSP Development Corp |access-date=March 3, 2014}}</ref> used to implement custom [[algorithm]]s. SPL has a [[C (programming language)|C]]/[[C++]] like syntax and is incrementally compiled into intermediate [[bytecode]], which is executed by a [[virtual machine]]. SPL supports both standard variables assigned with <code>=</code> and "hot" variables assigned with <code>:=</code>. For example, the statement <code>A = 1..3</code> assigns the series {1, 2, 3} to the standard variable "A". The square of the values can be assigned with <code>B = A * A</code>. Variable "B" contains the series {1, 4, 9}. If "A" changes, "B" does ''not'' change because "B" preserves the values as assigned without regard to the future state of "A". However, the statement <code>A := 1..3</code> creates a "hot" variable. A hot variable is analogous to a window, except hot variables do not display their data. The assignment <code>B := A * A</code> computes the square of the values of "A" as before, but now if "A" changes, "B" automatically updates. Setting <code>A = {3, 5, 2, 4}</code> causes "B" to automatically update with {9, 25, 4, 16}.

== History ==

DADiSP was originally developed in the early 1980s, as part of a research project at [[Massachusetts Institute of Technology|MIT]] to explore the aerodynamics of [[Formula One]] racing cars.<ref name="sca1" /> The original goal of the project was to enable researchers to quickly explore data analysis algorithms without the need for traditional programming.

== Version history ==

* DADiSP 6.7 B02,<ref>{{cite web|title=DADiSP 6.7 B02 Release Notes |url=http://www.dadisp.com/sls67quick.htm |publisher=DSP Development Corp |access-date=January 18, 2017}}</ref> Jan 2017
* DADiSP 6.7 B01,<ref>{{cite web|title=DADiSP 6.7 B01 Release Notes |url=http://www.dadisp.com/sls67b01.htm |publisher=DSP Development Corp |access-date=October 30, 2015 }}</ref> Oct 2015
* DADiSP 6.5 B05,<ref>{{cite web|title=DADiSP 6.5 B05 Release Notes |url=http://www.dadisp.com/sls65quick.htm |publisher=DSP Development Corp |access-date=March 3, 2014 }}</ref> Dec 2012
* DADiSP 6.5,<ref>{{cite web|title=DADiSP 6.5 |url=http://www.scientific-computing.com/products/product_details.php?product_id=844|publisher=Scientific Computing World|access-date=June 1, 2010}}</ref> May 2010 
* DADiSP 6.0, Sep 2002
* DADiSP 5.0, Oct 2000
* DADiSP 4.1, Dec 1997
* DADiSP 4.0, Jul 1995
* DADiSP 3.01, Feb 1993
* DADiSP 2.0,<ref>{{cite journal | doi = 10.1111/j.0033-0124.1992.00103.x | title = DADiSP 2.0 | volume=44 | year=1992 | journal=The Professional Geographer | pages=103â€“108}}</ref> Feb 1992
* DADiSP 1.05, May 1989
* DADiSP 1.03, Apr 1987

== See also ==

* [[List of numerical-analysis software]]
* [[Comparison of numerical-analysis software]]

== References ==

{{reflist}}

== Further reading ==

* Allen Brown, Zhang Jun: ''First Course In Digital Signal Processing Using DADiSP'', Abramis, {{ISBN|9781845495022}}
* Charles Stephen Lessard: ''Signal Processing of Random Physiological Signals (Google eBook)'', Morgan & Claypool Publishers

== External links ==

* [http://www.dadisp.com DSP Development Corporation (DADiSP vendor)]
* [http://www.dadisp.com/webhelp/dsphelp.htm DADiSP Online Help]
* [http://www.dadisp.com/flashdemos1.htm DADiSP Tutorials]
* [http://www.dadisp.com/files/getstart.pdf Getting Started with DADiSP]
* [https://web.archive.org/web/20120303063224/http://civil.eng.buffalo.edu/CIE616/3-HANDOUTS/DADISP/101108-Introduction%20to%20Dadisp.pdf Introduction to DADiSP]

{{-}}

{{Numerical analysis software}}

[[Category:Data analysis software]]
[[Category:Data-centric programming languages]]
[[Category:Data mining and machine learning software]]
[[Category:Numerical linear algebra]]
[[Category:Data visualization software]]
[[Category:Statistical programming languages]]
[[Category:C (programming language) software]]
[[Category:Software modeling language]]