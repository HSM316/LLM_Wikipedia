{{Infobox software
| name = ML.NET
| logo = [[File:Mldotnet.svg|150px]]
| screenshot = 
| caption = 
| collapsible = 
| author = [[.NET Foundation]], [[Microsoft]]
| developer = 
| released = {{Start date and age|2018|05|07|df=yes}}<ref name="blog_Intr">{{Cite web | title = Introducing ML.NET: Cross-platform, Proven and Open Source Machine Learning Framework | author = Ankit Asthana | work = blogs.msdn.microsoft.com | date = 2017-05-07 | accessdate = 2018-05-10 | url = https://blogs.msdn.microsoft.com/dotnet/2018/05/07/introducing-ml-net-cross-platform-proven-and-open-source-machine-learning-framework/ | quote =  }}</ref>
| latest release version = 1.4.0
| latest release date = {{Start date and age|2019|11|06|df=yes}}
| latest preview version = 1.4.0
| latest preview date = {{Start date and age|2019|10|09|df=yes}}
| repo = {{URL|https://github.com/dotnet/machinelearning/}}
| programming language = [[C Sharp (programming language)|C#]] and [[C++]]
| operating system = [[Linux]], [[macOS]], [[Microsoft Windows|Windows]]<ref>{{cite web|title=ML.NET: Machine Learning made for .NET|url=https://www.microsoft.com/net/learn/apps/machine-learning-and-ai/ml-dotnet|website=Microsoft|accessdate=11 May 2018}}</ref>
| size = 
| language = 
| genre = [[Machine learning]] [[Library (computing)|library]]
| license = [[MIT License]]<ref>[https://github.com/dotnet/machinelearning/blob/master/LICENSE at master · DotNet/MachineLearning]</ref>
| website = {{URL|https://dot.net/ml}}
}}
'''ML.NET''' is a [[free software]] [[machine learning]] [[Library (computing)|library]] for the [[C Sharp (programming language)|C#]] and [[F Sharp (programming language)|F#]] programming languages.<ref name="visu_Open">{{Cite web | title = Open Source, Cross-Platform ML.NET Simplifies Machine Learning -- Visual Studio Magazine | author = David Ramel | work = Visual Studio Magazine | date = 2018-05-08 | accessdate = 2018-05-10 | url = https://visualstudiomagazine.com/articles/2018/05/08/ml-net-framework.aspx | quote = }}</ref><ref name="onms_Micr">{{Cite web | title = Microsoft debuts ML.NET cross-platform machine learning framework | author = Kareem Anderson | work = On MSFT | date = 2017-05-09 | accessdate = 2018-05-10 | url = https://www.onmsft.com/news/microsoft-debuts-ml-net-cross-platform-machine-learning-framework | quote = }}</ref><ref name="msdn04_Micr">{{Cite web | title = Announcing ML.NET 0.4 | author = Ankit Asthana | work = blogs.msdn.microsoft.com | date = 2018-08-07 | accessdate = 2018-08-08 | url = https://blogs.msdn.microsoft.com/dotnet/2018/08/07/announcing-ml-net-0-4/ | quote = }}</ref> It also supports [[Python (programming language)|Python]] models when used together with NimbusML. The preview release of ML.NET included transforms for [[feature engineering]] like [[n-gram]] creation, and learners to handle binary classification, multi-class classification, and regression tasks.<ref name="gith_dotn">{{Cite web | title = ML.NET 0.1 Release Notes | author = Gal Oshri | work = GitHub | date = 2018-05-06 | accessdate = 2018-05-10 | url = https://github.com/dotnet/machinelearning/blob/master/Documentation/release-notes/0.1/release-0.1.md | quote =  }}</ref> Additional ML tasks like anomaly detection and recommendation systems have since been added, and other approaches like deep learning will be included in future versions.<ref name="foss_Micr">{{Cite web | title = Microsoft Launches ML.NET Open Source Machine Learning Framework | last = Tiwari | first = Aditya | work = Fossbytes | date = 2018-05-08 | accessdate = 2018-05-10 | url = https://fossbytes.com/microsoft-ml-net-open-source-framework-preview-released/ | quote = Over time, it will enable other ML tasks like anomaly detection, recommendation system, and other approaches like deep learning using the benefits of added libraries. }}</ref><ref>{{cite web |title=Machine learning tasks in ML.NET |url=https://docs.microsoft.com/en-us/dotnet/machine-learning/resources/tasks |website=Microsoft |accessdate=26 December 2018}}</ref>

==Machine learning==
ML.NET brings model-based Machine Learning analytic and prediction capabilities to existing .NET developers. The framework is built upon .NET Core and .NET Standard inheriting the ability to run cross-platform on [[Linux]], [[Windows]] and [[macOS]]. Although the ML.NET framework is new, its origins began in 2002 as a Microsoft Research project named TMSN (text mining search and navigation) for use internally within Microsoft products. It was later renamed to TLC (the learning code) around 2011. ML.NET was derived from the TLC library and has largely surpassed its parent says Dr. James McCaffrey, Microsoft Research.<ref name="msdn05_Micr">{{Cite web | title = ML.NET: The Machine Learning Framework for .NET Developers | author = James McCaffrey | work = MSDN Magazine Connect() Special Issue 2018 | date = 2018-12-19 | accessdate = 2019-01-09 | url = https://msdn.microsoft.com/en-us/magazine/mt848634/ | quote = Even though the ML.NET library is new, its origins go back many years. Shortly after the introduction of the Microsoft .NET Framework in 2002, Microsoft Research began a project called TMSN (“text mining search and navigation”) to enable software developers to include ML code in Microsoft products and technologies. The project was very successful, and over the years grew in size and usage internally at Microsoft. Somewhere around 2011 the library was renamed to TLC (“the learning code”). TLC is widely used within Microsoft and is currently in version 3.10. The ML.NET library is a descendant of TLC, with Microsoft-specific features removed. I’ve used both libraries and, in many ways, the ML.NET child has surpassed its parent. }}</ref>

Developers can train a Machine Learning Model or reuse an existing Model by a 3rd party and run it on any environment offline. This means developers do not need to have a background in Data Science to use the framework. Support for the [[open-source software|open-source]] Open Neural Network Exchange ([[Onnx|ONNX]]) [[Deep Learning]] model format was introduced from build 0.3 in ML.NET. The release included other notable enhancements such as Factorization Machines, LightGBM, Ensembles, LightLDA transform and OVA.<ref name="github_rel_03">{{Cite web | title = Release Microsoft ML.NET v0.3 | work = Github| date = 2018-07-03 | accessdate = 2018-07-03 | url =https://github.com/dotnet/machinelearning/blob/release/preview/docs/release-notes/0.3/release-0.3.md/ | quote = }}</ref> The ML.NET integration of [[TensorFlow]] is enabled from the 0.5 release. Support for x86 & x64 applications was added to build 0.7 including enhanced recommendation capabilities with Matrix Factorization.<ref name="ms_nimbus">{{Cite web | title = Announcing ML.NET 0.7 (Machine Learning .NET) | work = Microsoft | date = 2018-11-08 | accessdate = 2018-11-14 | url =https://blogs.msdn.microsoft.com/dotnet/2018/11/08/announcing-ml-net-0-7-machine-learning-net/ | quote = }}</ref> A full roadmap of planned features have been made available on the official GitHub repo.<ref name="github_roadmap">{{Cite web | title = The ML.NET Roadmap | work = Github| date = 2018-05-09 | accessdate = 2018-06-30 | url =https://github.com/dotnet/machinelearning/blob/d9d1216221701ee04951353e5180954056474cbf/ROADMAP.md/ | quote = }}</ref>

The first stable 1.0 release of the framework was announced at [[Build (developer conference)]] 2019. It included the addition of a Model Builder tool and AutoML (Automated Machine Learning) capabilities.<ref name="ms_build2019">{{Cite web | title = Announcing ML.NET 1.0 | work = Microsoft | date = 2019-05-06 | accessdate = 2019-05-07 | url =https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-0/ | quote = }}</ref> Build 1.3.1 introduced a preview of Deep Neural Network training using [https://github.com/SciSharp/TensorFlow.NET C# bindings for Tensorflow] and a Database loader which enables model training on databases. The 1.4.0 preview added ML.NET scoring on ARM processors and Deep Neural Network training with GPU's for Windows and Linux. <ref name="github_140preview">{{Cite web | title = ML.NET 1.4.0-preview2 | work = Github| date = 2019-10-09 | accessdate = 2019-10-09 | url =https://github.com/dotnet/machinelearning/releases/tag/1.4.0-preview2/ | quote = }}</ref>

===Performance===
Microsoft's paper on machine learning with ML.NET demonstrated it is capable of training sentiment analysis models using large datasets while achieving high accuracy. It's results showed 95% accuracy on Amazon's 9GB review dataset. <ref name="arx_paper1">{{Cite web | title = arXiv 1905.05715: Machine Learning at Microsoft with ML .NET | work = Microsoft & Yandex | date = 2019-05-15 | accessdate = 2019-10-18 | url = https://arxiv.org/abs/1905.05715/ | quote = }}</ref>

===Model builder===
The ML.NET CLI is a [[Command-line interface]] which uses ML.NET AutoML to perform model training and pick the best algorithm for the data. The ML.NET [https://github.com/dotnet/machinelearning-modelbuilder Model Builder preview] is an extension for [[Visual Studio]] that uses ML.NET CLI and ML.NET AutoML to output the best ML.NET Model using a [[GUI]].<ref name="ms_build2019"/>

===Model explainability===
AI fairness and explainability has been an area of debate for AI Ethicists in recent years.<ref name="forbes_aifairness">{{Cite web | title = Artificial Intelligence Can Reinforce Bias, Cloud Giants Announce Tools For AI Fairness | work = Forbes | date = 2018-09-24 | accessdate = 2018-12-05 | url = https://www.forbes.com/sites/paulteich/2018/09/24/artificial-intelligence-can-reinforce-bias-cloud-giants-announce-tools-for-ai-fairness/ | quote = }}</ref> A major issue for Machine Learning applications is the black box effect where end users and the developers of an application are unsure of how an algorithm came to a decision or whether the dataset contains bias.<ref name="pwc_aiblackbox">{{Cite web | title = What it means to open AI’s black box | work = PwC | date = 2018-05-15| accessdate = 2018-12-05 | url = https://usblogs.pwc.com/emerging-technology/to-open-ai-black-box/ | quote = }}</ref> Build 0.8 included model explainability API's that had been used internally in Microsoft. It added the capability to understand the feature importance of models with the addition of 'Overall Feature Importance' and 'Generalized Additive Models'.

When there are several variables that contribute to the overall score, it is possible to see a breakdown of each variable and which features had the most impact on the final score. The official documentation demonstrates that the scoring metrics can be output for debugging purposes. During training & debugging of a model, developers can preview and inspect live filtered data. This is possible using the [[Visual Studio]] DataView tools.<ref name="ms_explainability">{{Cite web | title = Announcing ML.NET 0.8 – Machine Learning for .NET | work = Microsoft | date = 2018-12-04| accessdate = 2018-12-05 | url = https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-ml-net-0-8-machine-learning-for-net/ | quote = }}</ref>

===Infer.NET===
Microsoft Research announced the popular Infer.NET model-based machine learning framework used for research in academic institutions since 2008 has been released open source and is now part of the ML.NET framework.<ref name="register_infernet">{{Cite web | title = Microsoft open-sources Infer.NET AI code just in time for the weekend | work = The Register| date = 2018-10-05 | accessdate = 2018-10-31 | url =https://www.theregister.co.uk/2018/10/05/imicrosoft_nfernet/ | quote = }}</ref> The Infer.NET framework utilises [[probabilistic programming]] to describe [[probabilistic model]]s which has the added advantage of interpretability. The Infer.NET namespace has since been changed to Microsoft.ML.Probabilistic consistent with ML.NET namespaces.<ref name="packt_infernet">{{Cite web | title = Microsoft open sources Infer.NET, its popular model-based machine learning framework | work = Packt | date = 2018-10-08 | accessdate = 2018-10-31 | url =https://hub.packtpub.com/microsoft-open-sources-infer-net-its-popular-model-based-machine-learning-framework | quote = }}</ref>

===NimbusML Python support===
Microsoft acknowledged that the [[Python (programming language)|Python]] programming language is popular with Data Scientists, so it has introduced NimbusML the experimental Python bindings for ML.NET. This enables users to train and use machine learning models in Python. It was made open source similar to Infer.NET.<ref name="ms_nimbus" />

===Machine learning in the browser===
ML.NET allows users to export trained models to the Open Neural Network Exchange ([[Onnx]]) format.<ref name="onnx01">{{Cite web | title = ML.NET – Export Machine Learning.Net models to ONNX format | work = El Bruno | date = 2018-07-11 | accessdate = 2019-01-09 | url = https://elbruno.com/2018/07/11/mlnet-export-machine-learning-net-models-to-onnx-format/ | quote = }}</ref> This establishes an opportunity to use models in different environments that don't use ML.NET. It would be possible to run these models in the client side of a browser using ONNX.js, a javascript client-side framework for deep learning models created in the Onnx format.<ref name="onnx02">{{Cite web | title = ONNX.js: Universal Deep Learning Models in The Browser | work = Will Badr | date = 2019-01-08 | accessdate = 2019-01-09 | url = https://towardsdatascience.com/onnx-js-universal-deep-learning-models-in-the-browser-fbd268c67513/ | quote = }}</ref>

===AI School Machine Learning Course===
Along with the rollout of the ML.NET preview, Microsoft rolled out free AI tutorials and courses to help developers understand techniques needed to work with the framework.<ref name="ai_Micr">{{Cite web | title = AI School | work = Microsoft AI | date = 2018-05-07 | accessdate = 2018-06-29 | url = https://aischool.microsoft.com/learning-paths/ | quote = }}</ref><ref name="docs_Micr">{{Cite web | title = ML.NET Guide | work = Microsoft | date = 2018-05-07 | accessdate = 2018-06-29 | url = https://docs.microsoft.com/en-us/dotnet/machine-learning/ | quote = }}</ref><ref name="infer_Micr">{{Cite web | title = Infer.NET User Guide | work = Infer.NET | date = 2018-10-05 | accessdate = 2018-10-31 | url = https://dotnet.github.io/infer/userguide/ | quote = }}</ref>

==See also==
{{Portal|Free and open-source software}}
* [[Scikit-learn]]
* [[Accord.NET]]
* Infer.NET
* NimbusML
* LightGBM
* [[TensorFlow]]
* [[Microsoft Cognitive Toolkit]]
* [[List of numerical analysis software]]
* [[List of numerical libraries#.NET Framework languages C.23.2C F.23.2C VB.NET and PowerShell|List of numerical libraries for .NET framework]]

==References==
{{Reflist|30em}}

==External links==
* GitHub repo: {{GitHub|dotnet/machinelearning}}
* GitHub repo: {{GitHub|microsoft/NimbusML}}

{{Microsoft FOSS}}

[[Category:Applied machine learning]]
[[Category:Data mining and machine learning software]]
[[Category:Deep learning]]
[[Category:Probabilistic models]]
[[Category:Probabilistic software]]
[[Category:Free statistical software]]
[[Category:.NET Framework]]
[[Category:Free software programmed in C Sharp]]
[[Category:Free software programmed in C++]]
[[Category:Microsoft free software]]
[[Category:Artificial intelligence applications]]
[[Category:Open-source artificial intelligence]]
[[Category:Software using the MIT license]]

{{compu-prog-stub}}