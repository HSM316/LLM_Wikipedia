'''Parity learning''' is a problem in [[machine learning]]. An algorithm that solves this problem must find a function ''ƒ'', given some samples (''x'',&nbsp;''ƒ''(''x'')) and the assurance that ''ƒ'' computes the [[Parity function|parity]] of bits at some fixed locations. The samples are generated using some distribution over the input. The problem is easy to solve using [[Gaussian elimination]] provided that a sufficient number of samples (from a distribution which is not too skewed) are provided to the algorithm.

== {{Anchor|LPN}} Noisy version ("Learning Parity with Noise") ==
In Learning Parity with Noise (LPN), the samples may contain some error. Instead of samples (''x'',&nbsp;''ƒ''(''x'')), the algorithm is provided with (''x'',&nbsp;''y''), where for random boolean <math>b \in \{0,1\}</math>

<math>y = \begin{cases} f(x), & \text{if }b \\ 1-f(x), & \text{otherwise} \end{cases}</math>

The noisy version of the parity learning problem is conjectured to be hard.<ref>{{Cite arXiv|last1=Wasserman|first1=Hal|last2=Kalai|first2=Adam|last3=Blum|first3=Avrim|date=2000-10-15|title=Noise-Tolerant Learning, the Parity Problem, and the Statistical Query Model|eprint=cs/0010022|language=en}}</ref>

== See also ==
* [[Learning with errors]]

== References ==
{{Reflist}}
* Avrim Blum, Adam Kalai, and Hal Wasserman, “Noise-tolerant learning, the parity problem, and the statistical query model,” J. ACM 50, no. 4 (2003): 506&ndash;519.
* Adam Tauman Kalai, Yishay Mansour, and Elad Verbin, “On agnostic boosting and parity learning,” in Proceedings of the 40th annual ACM symposium on Theory of computing (Victoria, British Columbia, Canada: ACM, 2008), 629&ndash;638, http://portal.acm.org/citation.cfm?id=1374466.
* Oded Regev, “On lattices, learning with errors, random linear codes, and cryptography,” in Proceedings of the thirty-seventh annual ACM symposium on Theory of computing (Baltimore, MD, USA: ACM, 2005), 84&ndash;93, http://portal.acm.org/citation.cfm?id=1060590.1060603.

{{DEFAULTSORT:Parity Learning}}
[[Category:Machine learning]]


{{Mathapplied-stub}}