{{Short description|Software for formal verification of cryptographic protocols}}
{{Infobox software
| name                   = Tamarin Prover
| title                  = Tamarin Prover
| logo                   = Tamarin_Prover_Logo.png
| screenshot             = Tamarin_Prover_Screenshot.png
| caption                =
| collapsible            =
| author                 = David Basin, [[Cas Cremers]], Jannik Dreier, Simon Meier, Ralf Sasse, Benedikt Schmidt
| developer              = [[Cas Cremers]], Jannik Dreier, Ralf Sasse
| released               = {{Start date|2012|04|24}}
| discontinued           =
| latest release version = 1.4.1
| latest release date    = {{release date|2019|01|18}}
| latest preview date    = <!-- {{Start date and age|YYYY|MM|DD}} -->
| programming language   = [[Haskell (programming language)|Haskell]]
| operating system       = [[Linux]], [[macOS]]
| platform               =
| size                   =
| language               = English
| genre                  = [[Automated reasoning]]
| license                = [[GNU GPL]] v3
| website                = {{url|tamarin-prover.github.io}}
| repo                   = {{URL|https://github.com/tamarin-prover/tamarin-prover}}
}}
'''Tamarin Prover''' is a [[computer software]] program for [[formal verification]] of [[cryptographic protocol]]s.<ref>Blanchet, B. (2014). [https://doi.org/10.1007/978-3-319-10082-1_3 Automatic Verification of Security Protocols in the Symbolic Model: The Verifier ProVerif. In: Aldini, A., Lopez, J., Martinelli, F. (eds) Foundations of Security Analysis and Design VII]. FOSAD FOSAD 2013 2012. Lecture Notes in Computer Science, vol 8604. Springer, Cham.</ref> It has been used to verify [[Transport Layer Security]] 1.3,<ref name="tls1.3">{{cite conference |last1=Cremers |first1=Cas |last2=Horvat |first2=Marko |last3=Scott |first3=Sam |last4=van der Merwe |first4=Thyla |date=2016 |title=Automated Analysis and Verification of TLS 1.3: 0-RTT, Resumption and Delayed Authentication |url=https://tls13tamarin.github.io/TLS13Tamarin/ |book-title=IEEE Symposium on Security and Privacy, 2016, San Jose, CA, USA, May 22-26, 2016 |pages=470–485 |conference=IEEE S&P 2016 |isbn=978-1-5090-0824-7 |doi=10.1109/SP.2016.35}}</ref> ISO/IEC 9798,<ref name="isoiec-9798">{{cite journal |last1=Basin |first1=David |last2=Cremers |first2=Cas |last3=Meier |first3=Simon |date=2013 |title=Provably repairing the ISO/IEC 9798 standard for entity authentication |url=https://www.cs.ox.ac.uk/people/cas.cremers/downloads/papers/BCM2013-iso9798-JCS.pdf |journal=Journal of Computer Security |volume=21 |issue=6 |pages=817–846 |doi=10.3233/JCS-130472|hdl=20.500.11850/69793 }}</ref> [[DNP3]] Secure Authentication v5,<ref name="DNP3">{{cite conference |url=http://www.cs.ox.ac.uk/people/cas.cremers/downloads/papers/CrDeMi2017-DNP3-extended.pdf |title= Secure Authentication in the Grid: A Formal Analysis of DNP3: SAv5 |last1=Cremers |first1=Cas |author-link1=Cas Cremers |last2=Dehnel-Wild |first2=Martin |last3=Milner |first3=Kevin |date=2017 |publisher=Springer |book-title=Computer Security - ESORICS 2017 - 22nd European Symposium on Research in Computer Security, Oslo, Norway, September 11-15, 2017, Proceedings, Part I |pages=389–407 |isbn=978-3-319-66401-9 |location=Oslo, Norway |conference=ESORICS 2017 |conference-url=https://www.ntnu.edu/esorics2017 |doi=10.1007/978-3-319-66402-6_23}}</ref> [[WireGuard]],<ref name="WGFV">{{citation |last1=Donenfeld |first1=Jason A. |last2=Milne |first2=Kevin |title=Formal Verification of the WireGuard Protocol |year=2018 |url=https://www.wireguard.com/papers/wireguard-formal-verification.pdf |access-date=2023-11-23 |archive-url=https://web.archive.org/web/20230528053450/https://www.wireguard.com/papers/wireguard-formal-verification.pdf |archive-date=2023-05-28 |url-status=live }};  {{citation |last1=Donenfeld |first1=Jason A. |title=Formal Verification |url=https://www.wireguard.com/formal-verification/ |access-date=2023-11-23 |archive-url=https://web.archive.org/web/20231113075609/https://www.wireguard.com/formal-verification/ |archive-date=2023-11-13 |url-status=live}} </ref><ref>{{cite conference |url=https://www.cs.ox.ac.uk/people/cas.cremers/downloads/papers/ScMeCrBa2012-tamarin.pdf |title=Automated analysis of Diffie-Hellman protocols and advanced security properties |last1=Schmidt |first1=Benedikt |last2=Meier |first2=Simon |last3=Cremers |first3=Cas |author-link3=Cas Cremers |last4=Basin |first4=David |date=2012 |publisher=IEEE Computer Society |book-title=25th IEEE Computer Security Foundations Symposium, CSF 2012, Cambridge, MA, USA, June 25-27, 2012 |pages=78–94 |location=Cambridge, MA |conference=CSF 2012}}</ref><ref name="schmidt-thesis">{{cite thesis |last=Schmidt |first=Benedikt |date=2012 |title=Formal analysis of key exchange protocols and physical protocols |publisher=ETH Zurich |type=PhD thesis |doi=10.3929/ethz-a-009898924 |hdl=20.500.11850/72713 }}</ref><ref name="meier-thesis">{{cite thesis |last=Meier |first=Simon |date=2012 |title=Advancing automated security protocol verification |publisher=ETH Zurich |type=PhD thesis|doi=10.3929/ethz-a-009790675 |hdl=20.500.11850/66840 }}</ref> and the PQ3 Messaging Protocol of [[Apple Inc.|Apple]] [[iMessage]].<ref>{{citation |last1=Basin |first1=David |last2=Linker |first2=Felix |last3=Sasse |first3=Ralf |title=A Formal Analysis of the iMessage PQ3 Messaging Protocol |url=https://security.apple.com/assets/files/A_Formal_Analysis_of_the_iMessage_PQ3_Messaging_Protocol_Basin_et_al.pdf |url-status=live |archive-url=https://web.archive.org/web/20240228005223/https://security.apple.com/assets/files/A_Formal_Analysis_of_the_iMessage_PQ3_Messaging_Protocol_Basin_et_al.pdf |archive-date=2024-02-28 |access-date=2024-03-06}}</ref>

Tamarin is an open source tool, written in [[Haskell]],<ref name=Remlein2020 /> built as a successor to an older verification tool called Scyther.<ref name=Boyd2019> Colin Boyd, Anish Mathuria, Douglas Stebila. "Protocols for Authentication and Key Establishment", Second Edition Springer, 2019. pg 48</ref> Tamarin has automatic proof features, but can also be self-guided.<ref name=Boyd2019 /> In Tamarin ''lemmas'' that representing security properties are defined.<ref name=Celi2022>Celi, Sofía, Jonathan Hoyland, Douglas Stebila, and Thom Wiggers. "A tale of two models: Formal verification of KEMTLS via Tamarin." In European Symposium on Research in Computer Security, pp. 63-83. Cham: Springer Nature Switzerland, 2022.</ref> After changes are made to a protocol, Tamarin can verify if the security properties are maintained.<ref name=Celi2022 /> The results of a Tamarin execution will either be a proof that the security property holds within the protocol, an example protocol run where the security property does not hold, or Tamarin could potentially [[Halting problem|fail to halt]].<ref name=Celi2022 /><ref name=Remlein2020>P. Remlein, M. Rogacki and U. Stachowiak, "Tamarin software – the tool for protocols verification security," 2020 Baltic URSI Symposium (URSI), Warsaw, Poland, 2020, pp. 118-123, doi: 10.23919/URSI48707.2020.9254078.</ref>

==See also==
* [[Dolev–Yao model]]
* [[Hybrid argument (cryptography)|Hybrid argument]]

==References==
{{reflist}}

==External links==
* [https://tamarin-prover.github.io/ Tamarin Prover official website]
* David Wong created [https://cryptologie.net/article/404/tamarin-prover-introduction/ an introductory video on the Tamarin Prover].

[[Category:Cryptographic software]]
[[Category:Free software programmed in Haskell]]
[[Category:Software using the GPL license]]
[[Category:Automated reasoning]]