{{Infobox software
| name                   = SHYSTER
| author                 = [[James Popple]]
| released               = {{Start date and age|1993|4|29|df=yes}}<ref>{{cite thesis|type=PhD thesis|last=Popple|first=James|author-link=James Popple|title=SHYSTER: A Pragmatic Legal Expert System|year=1993|publisher=Australian National University|isbn=0-7315-1827-6|url=http://cs.anu.edu.au/~James.Popple/publications/theses/phd.pdf|archiveurl=https://archive.org/details/SHYSTER-APragmaticLegalExpertSystem|archivedate=3 January 2007|url-status=live|accessdate=13 April 2015}} {{OL work|id=2832002W|cname=Available}}. Also {{Google books|jyQ2xnmAhXkC|available}}.</ref>{{rp|iii}}
| discontinued        = yes
| latest release version = 1.0
| programming language   = [[C (programming language)|C]]<ref>{{cite web|title=Source code|date=30 April 1995|publisher=Australian National University|website=SHYSTER|url=http://cs.anu.edu.au/software/shyster/source/|archiveurl=https://web.archive.org/web/20141229031035/http://cs.anu.edu.au/software/shyster/source/|archivedate=29 December 2014|url-status=live|accessdate=13 April 2015}}</ref>
| operating system       = [[Unix-like]]<ref name="Popple"/>{{rp|126}}
| size                   = 547&nbsp;KB<ref>{{cite web|title=Downloading source code and case law specifications|date=30 April 1995|publisher=Australian National University|website=SHYSTER|url=http://cs.anu.edu.au/software/shyster/download/|archiveurl=https://web.archive.org/web/20150515034741/http://cs.anu.edu.au/software/shyster/download/|archivedate=15 May 2015|url-status=live|accessdate=13 April 2015}}
</ref>
| language               = English
| genre                  = Legal software
| licence                = [[Freeware]]<ref>{{cite web|title=Terms and conditions|date=30 April 1995|publisher=Australian National University|website=SHYSTER|url=http://cs.anu.edu.au/software/shyster/download/conditions.html|archiveurl=https://web.archive.org/web/20141229031035/http://cs.anu.edu.au/software/shyster/download/conditions.html|archivedate=29 December 2014|url-status=live|accessdate=13 April 2015}}</ref>
| website                = {{URL|http://cs.anu.edu.au/software/shyster}}
}}

{{Infobox software
| name                   = SHYSTER-MYCIN
| author                 = Thomas O’Callaghan
| released               = {{Start date and age|2003|2|14|df=yes}}<ref>{{cite thesis|type=Honours thesis|last=O’Callaghan|first=Thomas|title=A Hybrid Legal Expert System|year=2003|publisher=Australian National University|url=http://cs.anu.edu.au/software/shyster/tom/thesis.pdf|accessdate=14 April 2016}}</ref>{{rp|iii}}
| discontinued        = yes
| latest release version = SM-v3<ref name="SHYSTER-MYCIN">{{cite book|last=O’Callaghan|first=Thomas A.|last2=McCreath|first2=Eric|last3=Popple|first3=James|authorlink3=James Popple|title=Building and Testing the SHYSTER-MYCIN Hybrid Legal Expert System|year=2003|publisher=Department of Computer Science, Faculty of Engineering and Information Technology, Australian National University|series=Technical Report TR-CS-03-01|url=http://cs.anu.edu.au/~James.Popple/publications/reports/tr-cs-03-01.pdf|url-status=live|accessdate=14 April 2016}}</ref>{{rp|10}}
| programming language   = [[MYCIN]]<ref name="SHYSTER-MYCIN"/>{{rp|7}}
| operating system       = [[Unix-like]]
| language               = English
| genre                  = Legal software
| website                = {{URL|http://cs.anu.edu.au/software/shyster/tom}}
}}

'''SHYSTER''' is a [[legal expert system]] developed at the [[Australian National University]] in [[Canberra]] in 1993.  It was written as the doctoral dissertation of [[James Popple]] under the supervision of Robin Stanton, Roger Clarke, [[Peter Drahos]], and Malcolm Newey.<ref>{{cite thesis|type=PhD thesis|last=Popple|first=James|author-link=James Popple|title=SHYSTER: A Pragmatic Legal Expert System|year=1993|publisher=Australian National University|isbn=0-7315-1827-6|url=http://cs.anu.edu.au/~James.Popple/publications/theses/phd.pdf|archiveurl=https://archive.org/details/SHYSTER-APragmaticLegalExpertSystem|archivedate=3 January 2007|url-status=live|accessdate=10 August 2014}} {{OL work|id=2832002W|cname=Available}}. Also {{Google books|jyQ2xnmAhXkC|available}}.</ref>  A full technical report of the expert system,<ref>{{cite book|last=Popple|first=James|author-link=James Popple|title=SHYSTER: The Program|year=1993|publisher=Department of Computer Science, Faculty of Engineering and Information Technology, Australian National University|series=Technical Report TR-CS-93-13|url=http://cs.anu.edu.au/~James.Popple/publications/reports/tr-cs-93-13.pdf|archiveurl=https://archive.org/details/SHYSTER-TheProgram|archivedate=3 January 2007|url-status=live|accessdate=10 August 2014}} Also {{Google books|8PjkWBjFy4gC|available}}.</ref> and a book<ref name="Popple">{{cite book|last=Popple|first=James|author-link=James Popple|title=A Pragmatic Legal Expert System|year=1996|publisher=Dartmouth (Ashgate)|series=Applied Legal Philosophy Series|isbn=1-85521-739-2|url=http://cs.anu.edu.au/~James.Popple/publications/books/shyster.pdf|archiveurl=https://archive.org/details/APragmaticLegalExpertSystem|archivedate=28 December 2006|url-status=live|accessdate=10 August 2014}} {{OL work|id=3243315W|cname=Available}}. Also {{Google books|ZyfNAgAAQBAJ|available}}.</ref> further detailing its development and testing have also been published.

SHYSTER emphasises its pragmatic approach, and posits that a legal expert system need not be based upon a complex model of legal reasoning in order to produce useful advice.  Although SHYSTER attempts to model the way in which lawyers argue with cases, it does not attempt to model the way in which lawyers decide which cases to use in those arguments.  SHYSTER is of a general design, permitting its operation in different legal domains.  It was designed to provide advice in areas of case law that have been specified by a legal expert using a bespoke [[specification language]].  Its knowledge of the law is acquired, and represented, as information about cases. It produces its advice by examining, and arguing about, the similarities and differences between cases.  It derives its name from [[Shyster]]: a slang word for someone who acts in a disreputable, unethical, or unscrupulous way, especially in the practice of law and politics.

==Methods==
SHYSTER is a specific example of a general category of legal expert systems, broadly defined as systems that make use of artificial intelligence (AI) techniques to solve legal problems.  [[Artificial intelligence and law|Legal AI]] systems can be divided into two categories: legal retrieval systems and legal analysis systems.  SHYSTER belongs to the latter category of legal analysis systems.  Legal analysis systems can be further subdivided into two categories: judgment machines and legal expert systems.  SHYSTER again belongs to the latter category of legal expert systems.  A [[legal expert system]], as Popple uses the term, is a system capable of performing at a level expected of a lawyer:  “AI systems which merely assist a lawyer in coming to legal conclusions or preparing legal arguments are not here considered to be legal expert systems; a legal expert system must exhibit some legal expertise itself."<ref name="Popple"/>{{rp|3}}

Designed to operate in more than one legal domain, and be of specific use to the common [[law of Australia]], SHYSTER accounts for [[statute law]], [[case law]], and the doctrine of [[precedent]] in areas of [[private law]].  Whilst it accommodates statute law, it is primarily a case-based system, in contradistinction to rule-based systems like [[MYCIN]].  More specifically, it was designed in a manner enabling it to be linked with a rule-based system to form a hybrid system.  Although case-based reasoning possesses an advantage over rule-based systems by the elimination of complex [[semantic network]]s, it suffers from intractable theoretical obstacles: without some further theory it cannot be predicted what features of a case will turn out to be relevant.<ref>Greinke, A. (1994): [http://www.murdoch.edu.au/elaw/issues/v1n4/greinke14.txt ‘Legal Expert Systems: A Humanistic Critique of Mechanical Human Inference’] ''E-Law: Murdoch University Electronic Journal of Law'' Volume 1, Number 4 (December 1994).</ref>  Users of SHYSTER therefore require some legal expertise.

[[Richard Susskind]] argues that “jurisprudence can and ought to supply the models of law and legal reasoning that are required for computerized [sic] implementation in the process of building all expert systems in law.”<ref>Susskind, R. (1987): ‘Expert Systems in Law’ (Oxford) p. 20.</ref> Popple, however, believes [[jurisprudence]] is of limited value to developers of legal expert systems.  He posits that a lawyer must have a model of the law (maybe unarticulated) which includes assumptions about the nature of law and legal reasoning, but that model need not rest on basic philosophical foundations.  It may be a pragmatic model, developed through experience within the legal system. Many lawyers perform their work with little or no jurisprudential knowledge, and there is no evidence to suggest that they are worse, or better, at their jobs than lawyers well-versed in jurisprudence.  The fact that many lawyers have mastered the process of legal reasoning, without having been immersed in jurisprudence, suggests that it may indeed be possible to develop legal expert systems of good quality without jurisprudential insight.<ref name="Popple"/>{{rp|6–7}}  As a pragmatic legal expert system SHYSTER is the embodiment of this belief.

A further example of SHYSTER’s pragmatism is its simple [[knowledge representation]] structure.  This structure was designed to facilitate specification of different areas of case law using a specification language.  Areas of case law are specified in terms of the cases and attributes of importance in those areas.  SHYSTER weights its attributes and checks for dependence between them.  In order to choose cases upon which to construct its opinions, SHYSTER calculates distances between cases and uses these distances to determine which of the leading cases are nearest to the instant case.  To this end SHYSTER can be seen to adopt and expand upon [[nearest neighbor search]] methods used in [[pattern recognition]].  These nearest cases are used to produce an argument (based on similarities and differences between the cases) about the likely outcome in the instant case. This argument relies on the doctrine of precedent; it assumes that the instant case will be decided the same way as was the nearest case.  SHYSTER then uses information about these nearest cases to construct a report.  The report that SHYSTER generates makes a prediction and justifies that prediction by reference only to cases and their similarities and differences: the calculations that SHYSTER performs in coming to its opinion do not appear in that opinion.  Safeguards are employed to warn users if SHYSTER doubts the veracity of its advice.

==Results==
SHYSTER was tested in four different and disparate areas of case law.  Four specifications were written, each representing an area of Australian law: an aspect of the law of [[trover]]; the meaning of “authorization [sic]” in [[Australian copyright law]]; the categorisation of employment contracts; and the implication of [[natural justice]] in administrative decision-making.  SHYSTER was evaluated under five headings: its usefulness, its generality, the quality of its advice, its limitations, and possible enhancements that could be made to it.  Despite its simple knowledge representation structure, it has shown itself capable of producing good advice, and its simple structure has facilitated the specification of different areas of law.

Appreciating the difficulties encountered by legal expert systems developers in adequately representing legal knowledge can assist in appreciating the shortcomings of [[digital rights management]] technologies.<ref>Cunningham, A. (2005): ‘Rights Expression on Digital Communication Networks: Some Implications for Copyright’ ''International Journal of Law and Information Technology'' 2005 13(1) p. 23.</ref>  Some academics believe future digital rights management systems may become sophisticated enough to permit exceptions to copyright law.<ref>See e.g.: Maillard, T. (2004): ‘Towards Digital Rights and Exemptions Management Systems’ ''Computer law and Security Report ''20 (4), pp. 281–287.</ref>  To this end SHYSTER's attempt to model “authorization [sic]” in the [[Australian Copyright Act 1968|Copyright Act]] can be viewed as pioneering work in this field.  The term “authorization [sic]” is undefined in the Copyright Act.  Consequently, a number of cases have been before the courts seeking answers as to what conduct amounts to authorisation.  The main contexts in which the issue has arisen are analogous to permitted exceptions to copyright currently prevented by most digital rights management technologies: “home taping of recorded materials, photocopying in educational institutions and performing works in public”.<ref>McKeough, J., Bowery, K. and Griffith, P. (2002): ‘Intellectual Property: Commentary and Materials’ (third edition), Lawbook Co. p. 198.</ref>  When applied to one case concerning [[compact cassette]]s,<ref>{{cite BAILII|litigants=CBS Songs v. Amstrad|court=UKHL|year=1988|num=15|date=12 May 1988|courtname=auto}}.</ref> SHYSTER successfully agreed that Amstrad did not authorise the infringement.<ref name="Popple"/>{{rp|186}}

==SHYSTER-MYCIN==
Popple highlighted the most obvious avenue of future research using SHYSTER as the development of a rule-based system, and the linking together of that rule-based system with the existing case-based system to form a hybrid system.  This intention was eventually realised by Thomas O’Callaghan, the creator of SHYSTER-MYCIN: a hybrid legal expert system first presented at ICAIL '03, 24–28 June 2003 in Edinburgh, Scotland.<ref>{{cite conference|last=O’Callaghan|first=Thomas A.|last2=Popple|first2=James|authorlink2=James Popple|last3=McCreath|first3=Eric|title=SHYSTER-MYCIN: A Hybrid Legal Expert System|date=26 June 2003|conference=Ninth International Conference on Artificial Intelligence and Law (ICAIL-03)|publisher=[[Association for Computing Machinery|ACM]]|place=Edinburgh, Scotland|pages=103–104|ISBN=1581137478|url=http://cs.anu.edu.au/software/shyster/tom/icail-03.pdf|url-status=live|accessdate=14 April 2016}}</ref>

[[MYCIN]] is an existing medical expert system, which was adapted for use with SHYSTER.  MYCIN’s controversial “certainty factor” is not used in SHYSTER-MYCIN.  The reason for this is the difficulty in scientifically establishing how certain a fact is in a legal domain.  The rule-based approach of the MYCIN part is used to reason with the provisions of an Act of Parliament only.<ref name="O'Callaghan">{{cite book|last=O’Callaghan|first=Thomas A.|last2=McCreath|first2=Eric|last3=Popple|first3=James|authorlink3=James Popple|title=Building and Testing the SHYSTER-MYCIN Hybrid Legal Expert System|year=2003|publisher=Department of Computer Science, Faculty of Engineering and Information Technology, Australian National University|series=Technical Report TR-CS-03-01|url=http://cs.anu.edu.au/~James.Popple/publications/reports/tr-cs-03-01.pdf|url-status=live|accessdate=7 August 2014}}</ref>  This hybrid system enables the case-based system (SHYSTER) to determine open textured concepts when required by the rule-based system (MYCIN).<ref name="O'Callaghan"/>{{rp|2}} The ultimate conclusion of this joint endeavour is that a hybrid approach is preferred in the creation of legal expert systems where “it is appropriate to use rule-based reasoning when dealing with statutes, and…case-based reasoning when dealing with cases”.<ref name="O'Callaghan"/>{{rp|13}}

==See also==
* [[MYCIN]]

==References==
{{Reflist}}

==External links==
*{{cite web|title=SHYSTER|date=26 June 2003|publisher=Australian National University|url=http://cs.anu.edu.au/software/shyster/|archiveurl=https://web.archive.org/web/20140702103838/http://cs.anu.edu.au/software/shyster/|archivedate=2 July 2014|url-status=live|accessdate=10 August 2014}}
*{{cite web|title=Source code|date=30 April 1995|publisher=Australian National University|website=SHYSTER|url=http://cs.anu.edu.au/software/shyster/source/|archiveurl=https://web.archive.org/web/20140725042334/http://cs.anu.edu.au/software/shyster/source/|archivedate=25 July 2014|url-status=live|accessdate=10 August 2014}}
*{{cite web|title=Case law specifications|date=30 April 1995|publisher=Australian National University|website=SHYSTER|url=http://cs.anu.edu.au/software/shyster/specifications/|archiveurl=https://web.archive.org/web/20140725044532/http://cs.anu.edu.au/software/shyster/specifications/|archivedate=25 July 2014|url-status=live|accessdate=10 August 2014}}
*{{cite web|title=Example output|date=30 April 1995|publisher=Australian National University|website=SHYSTER|url=http://cs.anu.edu.au/software/shyster/output/|archiveurl=https://web.archive.org/web/20140725044739/http://cs.anu.edu.au/software/shyster/output/|archivedate=25 July 2014|url-status=live|accessdate=10 August 2014}}
*{{cite web|title=SHYSTER-MYCIN|date=26 June 2003|publisher=Australian National University|website=SHYSTER|url=http://cs.anu.edu.au/software/shyster/tom/|archiveurl=https://web.archive.org/web/20140725042608/http://cs.anu.edu.au/software/shyster/tom/|archivedate=25 July 2014|url-status=live|accessdate=10 August 2014}}

[[Category:Argument technology]]
[[Category:Artificial intelligence]]
[[Category:Expert systems]]
[[Category:Legal software]]
[[Category:Legal systems]]
[[Category:Specification languages]]